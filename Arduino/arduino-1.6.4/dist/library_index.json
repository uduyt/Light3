{
  "libraries": [
    {
      "name": "Adafruit ADXL345",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified driver for the ADXL345 Accelerometer",
      "paragraph": "Unified driver for the ADXL345 Accelerometer",
      "website": "https://github.com/adafruit/Adafruit_ADXL345",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_ADXL345/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_ADXL345-1.0.0-github.zip",
      "size": 8748,
      "checksum": "SHA-256:0d699b781dc4f81cc068555e4329a5cd55a54079502a37f6dc39bfefe65bb4ea"
    },
    {
      "name": "Adafruit BMP183 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Non-Unified BMP library",
      "paragraph": "Non-Unified BMP library",
      "website": "https://github.com/adafruit/Adafruit_BMP183_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_BMP183_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_BMP183_Library-1.0.0-github.zip",
      "size": 7153,
      "checksum": "SHA-256:3848097450d8552f6f8a95b6c99e42de58fe4af19063eaa68ba041c816c935f9"
    },
    {
      "name": "Adafruit MCP9808 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MCP9808 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MCP9808 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_MCP9808_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_MCP9808_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_MCP9808_Library-1.0.0-github.zip",
      "size": 5721,
      "checksum": "SHA-256:da6e1054ace84f5f9f6123c3c4c2f96b2f0b88565629113517589b1a4f7a5aa3"
    },
    {
      "name": "Adafruit nRF8001",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Drivers for Adafruit's nRF8001 Bluetooth Low Energy Breakout",
      "paragraph": "Drivers for Adafruit's nRF8001 Bluetooth Low Energy Breakout",
      "website": "https://github.com/adafruit/Adafruit_nRF8001",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_nRF8001/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_nRF8001-1.0.0-github.zip",
      "size": 59267,
      "checksum": "SHA-256:8e99dde506edfd56e443f9e424b6b6c2b48e5e950c31d2fe89205064d5519ecb"
    },
    {
      "name": "Adafruit SoftServo",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A lightweight software servo library, designed for Trinket/Gemma but good for other Arduino-compats",
      "paragraph": "A lightweight software servo library, designed for Trinket/Gemma but good for other Arduino-compats",
      "website": "https://github.com/adafruit/Adafruit_SoftServo",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_SoftServo/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_SoftServo-1.0.0-github.zip",
      "size": 3583,
      "checksum": "SHA-256:de4e0c9d9af9cd92ad171e1f01924fb76bbe5dc76c8e13d0a2ff75cc50c8a46b"
    },
    {
      "name": "Adafruit Trellis Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling Adafruit Trellis",
      "paragraph": "Arduino library for controlling Adafruit Trellis",
      "website": "https://github.com/adafruit/Adafruit_Trellis_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_Trellis_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_Trellis_Library-1.0.0-github.zip",
      "size": 11603,
      "checksum": "SHA-256:67cc745358b8f50e66ff4a39345a84fad396e50c6df0ca011ae935e8272eb16d"
    },
    {
      "name": "MAX6675 library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for interfacing with MAX6675 thermocouple amplifier",
      "paragraph": "Arduino library for interfacing with MAX6675 thermocouple amplifier",
      "website": "https://github.com/adafruit/MAX6675-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/MAX6675-library/archive/1.0.0.zip",
      "archiveFileName": "MAX6675_library-1.0.0-github.zip",
      "size": 4015,
      "checksum": "SHA-256:cb33fedda9dd1ab8431e58234706979cbae516e4f5405dca90f4b365f63e5c12"
    },
    {
      "name": "Adafruit ADS1X15",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for TI's ADS1015: 12-bit Differential or Single-Ended ADC with PGA and Comparator",
      "paragraph": "Driver for TI's ADS1015: 12-bit Differential or Single-Ended ADC with PGA and Comparator",
      "website": "https://github.com/adafruit/Adafruit_ADS1X15",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_ADS1X15/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_ADS1X15-1.0.0-github.zip",
      "size": 9696,
      "checksum": "SHA-256:635b7e1f893e9b355ace72932f362ee009261de94af10fb49168c74ae8228fa8"
    },
    {
      "name": "Audio",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Audio/archive/1.0.0.zip",
      "archiveFileName": "Audio-1.0.0-github.zip",
      "size": 7314,
      "checksum": "SHA-256:ccafda9702f98a1332adfdc19cf242479cf715129fdcf47928db81adf2bf2077"
    },
    {
      "name": "Audio",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Audio/archive/1.0.1.zip",
      "archiveFileName": "Audio-1.0.1-github.zip",
      "size": 7274,
      "checksum": "SHA-256:160ada0af25b5a8dc96a5922381fdd5bd49a2531bcee489e9628c010e1e6cbbc"
    },
    {
      "name": "Audio",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Audio/archive/1.0.2.zip",
      "archiveFileName": "Audio-1.0.2-github.zip",
      "size": 7277,
      "checksum": "SHA-256:7806836596672251f130adfbab93a868bb5e558bc48e5d658c59886007ab20b5"
    },
    {
      "name": "TimerOne",
      "version": "1.1.0",
      "author": "Jesse Tane, Jérôme Despatis, Michael Polli, Dan Clemens, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use hardware Timer1 for finer PWM control and/or running an periodic interrupt function",
      "website": "http://playground.arduino.cc/Code/Timer1",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/TimerOne/archive/1.1.zip",
      "archiveFileName": "TimerOne-1.1.0-github.zip",
      "size": 8275,
      "checksum": "SHA-256:780c0b0eb1f0b086128e155d65f4d7fa94f3ac5cad1df7994105a9e9e76ee563"
    },
    {
      "name": "TSL2561 Arduino Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for using the TSL2561 Luminosity sensor",
      "paragraph": "Arduino library for using the TSL2561 Luminosity sensor",
      "website": "https://github.com/adafruit/TSL2561-Arduino-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/TSL2561-Arduino-Library/archive/1.0.0.zip",
      "archiveFileName": "TSL2561_Arduino_Library-1.0.0-github.zip",
      "size": 8041,
      "checksum": "SHA-256:c8ca3474207a8af174fcbd0a6610e5e9bbb412fbdbf6594e9af4ece591344257"
    },
    {
      "name": "Adafruit Si5351 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's Si5351 Clockgen Breakout",
      "paragraph": "Driver for Adafruit's Si5351 Clockgen Breakout",
      "website": "https://github.com/adafruit/Adafruit_Si5351_Library",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_Si5351_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_Si5351_Library-1.0.0-github.zip",
      "size": 14526,
      "checksum": "SHA-256:2bad8f0cbfd1a8afbe5aa599390f0c9b811d23fd281f2174058567bfa6ff4c38"
    },
    {
      "name": "PS2Keyboard",
      "version": "2.4.0",
      "author": "Christian Weichel, Paul Stoffregen, L. Abraham Smith, Cuningan",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use a PS/2 Keyboard for input",
      "website": "https://github.com/PaulStoffregen/PS2Keyboard",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/PS2Keyboard/archive/2.4.zip",
      "archiveFileName": "PS2Keyboard-2.4.0-github.zip",
      "size": 11462,
      "checksum": "SHA-256:5ecc750a2202bf2b8838482f990f8a4364f74a95202f069077ec55997a7557b2"
    },
    {
      "name": "LedControl",
      "version": "1.0.6",
      "author": "Eberhard Fahle \u003ce.fahle@wayoda.org\u003e",
      "maintainer": "Eberhard Fahle \u003ce.fahle@wayoda.org\u003e",
      "sentence": "A library for the MAX7219 and the MAX7221 Led display drivers.",
      "paragraph": "The library supports multiple daisychained drivers and supports Led-Matrix displays as well as 7-Segment displays.",
      "website": "http://wayoda.github.io/LedControl/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/wayoda/LedControl/archive/1.0.6.zip",
      "archiveFileName": "LedControl-1.0.6-github.zip",
      "size": 10645,
      "checksum": "SHA-256:4fc0b156d1fbabce90e3658fc5b0a8f71ef5d29005b2dea1e5af18401fd41a78"
    },
    {
      "name": "Adafruit ILI9340",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit 2.2\" SPI display.",
      "paragraph": "This is a library for the Adafruit 2.2\" SPI display.",
      "website": "https://github.com/adafruit/Adafruit_ILI9340",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_ILI9340/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_ILI9340-1.0.0-github.zip",
      "size": 72132,
      "checksum": "SHA-256:f80728de859b32b953d28b2150ce406f75d0979459ba1ddbab51b40318d1ffc6"
    },
    {
      "name": "Adafruit ILI9341",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Adafruit ILI9341 displays",
      "paragraph": "Library for Adafruit ILI9341 displays",
      "website": "https://github.com/adafruit/Adafruit_ILI9341",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_ILI9341/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_ILI9341-1.0.0-github.zip",
      "size": 20561,
      "checksum": "SHA-256:c7e1c8215e8b09b880e75de5e2b055ade5cfd12ed477b762f9c8e2b8a8775999"
    },
    {
      "name": "Adafruit MPR121",
      "version": "1.0.0",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MPR121-based capacitive sensors in the Adafruit shop.",
      "paragraph": "Designed specifically to work with the MPR121 Breakout in the Adafruit shop.",
      "website": "https://github.com/adafruit/Adafruit_MPR121_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_MPR121_Library/archive/v1.0.0.zip",
      "archiveFileName": "Adafruit_MPR121-1.0.0-github.zip",
      "size": 6062,
      "checksum": "SHA-256:022c66a264b60086f318444365555bc85ef0c0471b84374c39c8614b899f2336"
    },
    {
      "name": "Adafruit PWM Servo Driver Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit PWM Servo Driver Library",
      "paragraph": "Adafruit PWM Servo Driver Library",
      "website": "https://github.com/adafruit/Adafruit-PWM-Servo-Driver-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-PWM-Servo-Driver-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_PWM_Servo_Driver_Library-1.0.0-github.zip",
      "size": 8153,
      "checksum": "SHA-256:c16a2c511fecd2028636b92552e92f433ede7023733fac6d10dbdfdc2f0896bb"
    },
    {
      "name": "Adafruit SI1145 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the SI1145 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the SI1145 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_SI1145_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_SI1145_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_SI1145_Library-1.0.0-github.zip",
      "size": 6030,
      "checksum": "SHA-256:82c0a00d108c02b8d19eb2d75d73087f55e46d0792a863743c2b647d48792eb9"
    },
    {
      "name": "Adafruit Soundboard library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for UART control of the Adafruit Soundboard",
      "paragraph": "Arduino Library for UART control of the Adafruit Soundboard",
      "website": "https://github.com/adafruit/Adafruit_Soundboard_library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_Soundboard_library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_Soundboard_library-1.0.0-github.zip",
      "size": 6789,
      "checksum": "SHA-256:f06d8a6fdd12f8f393597e0db3a48d89d2632230ada6e9b9d382939c13bc9349"
    },
    {
      "name": "HL1606 LED Strip",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Code to control HL1606-based LED strips",
      "paragraph": "Code to control HL1606-based LED strips",
      "website": "https://github.com/adafruit/HL1606-LED-Strip",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/HL1606-LED-Strip/archive/1.0.0.zip",
      "archiveFileName": "HL1606_LED_Strip-1.0.0-github.zip",
      "size": 7847,
      "checksum": "SHA-256:44abd30156ae59ec5da08716d38f352cef398d4d92f04d5087966637247702b2"
    },
    {
      "name": "LPD8806",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for LED strips and pixels using LPD8806 (and probably LPD8803/LPD8809)",
      "paragraph": "Arduino library for LED strips and pixels using LPD8806 (and probably LPD8803/LPD8809)",
      "website": "https://github.com/adafruit/LPD8806",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/LPD8806/archive/1.0.0.zip",
      "archiveFileName": "LPD8806-1.0.0-github.zip",
      "size": 21599,
      "checksum": "SHA-256:2828d67a45733cb02e509e2ec36dc4e3fd675ac89ff47c0789c9d0a2abc86313"
    },
    {
      "name": "Adafruit DRV2605 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for Adafruit DRV2605L Hapic Controller Breakout",
      "paragraph": "Arduino library for Adafruit DRV2605L Hapic Controller Breakout",
      "website": "https://github.com/adafruit/Adafruit_DRV2605_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_DRV2605_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_DRV2605_Library-1.0.0-github.zip",
      "size": 5241,
      "checksum": "SHA-256:e2d6db10fbb1a891f62807d1373d70b548cb0d5cd98acc41f6a4cdf6bc328543"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-GFX-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.0.0-github.zip",
      "size": 9818,
      "checksum": "SHA-256:d19f79874a8599901566ee5ab7c5cd50c15233b754a2ed6c48979cb926d933e6"
    },
    {
      "name": "Pro Trinket USB Keyboard Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "An arduino library to turn a Pro Trinket 5V/16MHz into a USB Keyboard!",
      "paragraph": "An arduino library to turn a Pro Trinket 5V/16MHz into a USB Keyboard!",
      "website": "https://github.com/adafruit/Pro_Trinket_USB_Keyboard_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Pro_Trinket_USB_Keyboard_Library/archive/1.0.0.zip",
      "archiveFileName": "Pro_Trinket_USB_Keyboard_Library-1.0.0-github.zip",
      "size": 3390267,
      "checksum": "SHA-256:24e3cfabaad98b43ed46f4e1c5d993c2a45d953710e29cbd684e1a3bc3b8d3b1"
    },
    {
      "name": "Adafruit LSM9DS0 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for LSM9DS0 9-DOF sensor board.",
      "paragraph": "Arduino library for LSM9DS0 9-DOF sensor board.",
      "website": "https://github.com/adafruit/Adafruit_LSM9DS0_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_LSM9DS0_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_LSM9DS0_Library-1.0.0-github.zip",
      "size": 11612,
      "checksum": "SHA-256:d84564f4f1f15b79774aff6f09275ddeb9e996e9df067e68cb1f86760538b510"
    },
    {
      "name": "Adafruit MCP23017 Arduino Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the MCP23017 I2C Port Expander",
      "paragraph": "Library for the MCP23017 I2C Port Expander",
      "website": "https://github.com/adafruit/Adafruit-MCP23017-Arduino-Library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-MCP23017-Arduino-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_MCP23017_Arduino_Library-1.0.0-github.zip",
      "size": 10449,
      "checksum": "SHA-256:298ef8d46fd73f4170e9461205d83f8b0bc86002fea39539082c0488d229811f"
    },
    {
      "name": "Adafruit TLC5947",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's Arduino driver for the TLC5947 PWM LED Driver Breakout.",
      "paragraph": "Adafruit's Arduino driver for the TLC5947 PWM LED Driver Breakout.",
      "website": "https://github.com/adafruit/Adafruit_TLC5947",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_TLC5947/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_TLC5947-1.0.0-github.zip",
      "size": 4508,
      "checksum": "SHA-256:7d20f7ebc2b41818f307bb775302ddd61129ee95f6e561a3951a1da9b583965c"
    },
    {
      "name": "FifteenStep",
      "version": "1.0.1",
      "author": "Todd Treece \u003ctodd@uniontownlabs.org\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A general purpose Arduino MIDI sequencer library.",
      "paragraph": "This library allows you to create a simple sequencer using any MIDI implementation (i.e. USB or Serial).",
      "website": "https://github.com/adafruit/FifteenStep",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/FifteenStep/archive/v1.0.1.zip",
      "archiveFileName": "FifteenStep-1.0.1-github.zip",
      "size": 25690,
      "checksum": "SHA-256:8067acf429b19f910c68c27c2867e9ac0c4f0e5801948aeff4d1bcbed11fead1"
    },
    {
      "name": "Adafruit L3GD20 U",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for the L3GD20 Gyroscope",
      "paragraph": "Unified sensor driver for the L3GD20 Gyroscope",
      "website": "https://github.com/adafruit/Adafruit_L3GD20_U",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_L3GD20_U/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_L3GD20_U-1.0.0-github.zip",
      "size": 7965,
      "checksum": "SHA-256:a4fbc3907483cc54990452add339eaf675916ad595749f6b8d8173318f75e7a0"
    },
    {
      "name": "Adafruit BMP085 Unified",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for Adafruit's BMP085 \u0026 BMP180 breakouts",
      "paragraph": "Unified sensor driver for Adafruit's BMP085 \u0026 BMP180 breakouts",
      "website": "https://github.com/adafruit/Adafruit_BMP085_Unified",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_BMP085_Unified/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_BMP085_Unified-1.0.0-github.zip",
      "size": 9227,
      "checksum": "SHA-256:0b151d9d2efd84a609c0e72ba4438fc8536e69ddbcbcf922d4e96415b2e8d4b5"
    },
    {
      "name": "Adafruit AM2315",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library code for AM2315 sensors",
      "paragraph": "Library code for AM2315 sensors",
      "website": "https://github.com/adafruit/Adafruit_AM2315",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_AM2315/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_AM2315-1.0.0-github.zip",
      "size": 4563,
      "checksum": "SHA-256:ae89861ba2b1bcac2984a50e6724c6daecebe765b6eb3ca16d6bfe92536ed039"
    },
    {
      "name": "Adafruit SSD1306",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "paragraph": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "website": "https://github.com/adafruit/Adafruit_SSD1306",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_SSD1306/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_SSD1306-1.0.0-github.zip",
      "size": 21352,
      "checksum": "SHA-256:029ff16d8d9d5f97c88d3cd0e0520a45511dfaa492904dce0aadb0ca90cab8a1"
    },
    {
      "name": "MAX31850 OneWire",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A version of the OneWire Arduino library with MAX31850 support",
      "paragraph": "A version of the OneWire Arduino library with MAX31850 support",
      "website": "https://github.com/adafruit/MAX31850_OneWire",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/MAX31850_OneWire/archive/1.0.0.zip",
      "archiveFileName": "MAX31850_OneWire-1.0.0-github.zip",
      "size": 20690,
      "checksum": "SHA-256:88f8568e942f919ebc9e76c918ca53e5c5ba9d1e6ed5a9deeaf927c7721171be"
    },
    {
      "name": "Adafruit LED Backpack Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-LED-Backpack-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_LED_Backpack_Library-1.0.0-github.zip",
      "size": 65659,
      "checksum": "SHA-256:9218c6e39e42a6d09b903d1258f8719a7773d884a16aa60abf03c0b1df621b53"
    },
    {
      "name": "Adafruit SSD1331 OLED Driver Library for Arduino",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "For 0.96\" OLEDs in the Adafruit shop",
      "paragraph": "For 0.96\" OLEDs in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-SSD1331-OLED-Driver-Library-for-Arduino",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-SSD1331-OLED-Driver-Library-for-Arduino/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_SSD1331_OLED_Driver_Library_for_Arduino-1.0.0-github.zip",
      "size": 30565,
      "checksum": "SHA-256:c789900f33816bd55ba90a2b1511f0f9d309dbdf5ec5f49b34bed688ec9eac20"
    },
    {
      "name": "Adafruit TinyRGBLCDShield",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_RGBLCDShield library ported to Trinket/Gemma",
      "paragraph": "Adafruit_RGBLCDShield library ported to Trinket/Gemma",
      "website": "https://github.com/adafruit/Adafruit_TinyRGBLCDShield",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_TinyRGBLCDShield/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_TinyRGBLCDShield-1.0.0-github.zip",
      "size": 12106,
      "checksum": "SHA-256:d21d2dd4882ceaeeac1a3d43574b94ba72d8399041d9938c6f1218ea946ffbc7"
    },
    {
      "name": "Esplora",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Esplora/archive/1.0.0.zip",
      "archiveFileName": "Esplora-1.0.0-github.zip",
      "size": 22963,
      "checksum": "SHA-256:6c3ab11cf643c24f944e0920d3985eceb698e380f1a0fe1e8d5535bd3f300338"
    },
    {
      "name": "Esplora",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Esplora/archive/1.0.1.zip",
      "archiveFileName": "Esplora-1.0.1-github.zip",
      "size": 22963,
      "checksum": "SHA-256:73479c51d43a3ede728f6a37f819b0998b95b56e0ad63f4b501d13a286374c58"
    },
    {
      "name": "Esplora",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Esplora/archive/1.0.2.zip",
      "archiveFileName": "Esplora-1.0.2-github.zip",
      "size": 22958,
      "checksum": "SHA-256:ca3204670336cebf17e9d6a31590198ddd09676bc67e4b18277c1358d4f4b6e6"
    },
    {
      "name": "Esplora",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Esplora/archive/1.0.3.zip",
      "archiveFileName": "Esplora-1.0.3-github.zip",
      "size": 22968,
      "checksum": "SHA-256:30cd2436e1385ca7e0d9b8af961502f6ffbb69d3dca10cbdc4c9ca58b52e59d6"
    },
    {
      "name": "DmxSimple",
      "version": "3.1.0",
      "author": "Peter Knight, Tinker.it!",
      "maintainer": "Paul Stoffregen",
      "sentence": "Drive DMX controlled lights and visual effects available from DJ or theatrical suppliers.",
      "website": "https://code.google.com/p/tinkerit/wiki/DmxSimple",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/DmxSimple/archive/3.1.zip",
      "archiveFileName": "DmxSimple-3.1.0-github.zip",
      "size": 40613,
      "checksum": "SHA-256:1c0d7100e83aa5a5603cd988d0de37eca8e566af05f5f4b8e2864aa699f96819"
    },
    {
      "name": "Adafruit RGB LCD Shield Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit RGB 16x2 LCD Shield.",
      "paragraph": "Library for the Adafruit RGB 16x2 LCD Shield.",
      "website": "https://github.com/adafruit/Adafruit-RGB-LCD-Shield-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-RGB-LCD-Shield-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_RGB_LCD_Shield_Library-1.0.0-github.zip",
      "size": 12276,
      "checksum": "SHA-256:fecbfb0728260040d51732a1b992630543595abaa90f54aba865c7d7caa2032d"
    },
    {
      "name": "HL1606 LED Strip PWM",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All the joy of HL1606 LED strips but with 9 or 12 bit color control!",
      "paragraph": "All the joy of HL1606 LED strips but with 9 or 12 bit color control!",
      "website": "https://github.com/adafruit/HL1606-LED-Strip-PWM",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/HL1606-LED-Strip-PWM/archive/1.0.0.zip",
      "archiveFileName": "HL1606_LED_Strip_PWM-1.0.0-github.zip",
      "size": 9665,
      "checksum": "SHA-256:240c1951326d86b323491572b8d32179be0a961974cc4af83d0f648f231a8749"
    },
    {
      "name": "Servo",
      "version": "1.0.0",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Servo/archive/1.0.0.zip",
      "archiveFileName": "Servo-1.0.0-github.zip",
      "size": 14826,
      "checksum": "SHA-256:e0ee63de17a838de67c5cf44260ba6a137a576b16f37459e41ff0f947e730f97"
    },
    {
      "name": "Servo",
      "version": "1.0.1",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Servo/archive/1.0.1.zip",
      "archiveFileName": "Servo-1.0.1-github.zip",
      "size": 14849,
      "checksum": "SHA-256:9e38adf1b14a42488b42abb5ab21d62e32992a5f2b5e75fd5f67709c535385a8"
    },
    {
      "name": "Servo",
      "version": "1.0.2",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Servo/archive/1.0.2.zip",
      "archiveFileName": "Servo-1.0.2-github.zip",
      "size": 14852,
      "checksum": "SHA-256:dbad6fd65617cb21d9ffb23ee924b2b9c8b1b04cbc11cfb858f1e64783dc4ed6"
    },
    {
      "name": "MQTT",
      "version": "1.0.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "wrapper for the official eclipse paho embedded library",
      "paragraph": "Hello there",
      "website": "http://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/256dpi/arduino-mqtt/archive/v1.0.zip",
      "archiveFileName": "MQTT-1.0.0-github.zip",
      "size": 34637,
      "checksum": "SHA-256:19d8094d29b79192278f491a0a2f7ce1ea29056ea3acaaf1493d83045be27300"
    },
    {
      "name": "MQTT",
      "version": "1.1.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "paho mqtt library wrapper for arduino",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the eclipse paho project and adds a thin wrapper to get an Arduino like API.",
      "website": "http://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/256dpi/arduino-mqtt/archive/v1.1.zip",
      "archiveFileName": "MQTT-1.1.0-github.zip",
      "size": 35403,
      "checksum": "SHA-256:219fd75da86935bc32420c0e666a2d0399358da77e6fcac15608d88a36a3c9c7"
    },
    {
      "name": "MQTT",
      "version": "1.2.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "paho mqtt library wrapper for arduino",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the eclipse paho project and adds a thin wrapper to get an Arduino like API.",
      "website": "http://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/256dpi/arduino-mqtt/archive/v1.2.zip",
      "archiveFileName": "MQTT-1.2.0-github.zip",
      "size": 35784,
      "checksum": "SHA-256:5e8ff268e45e519aae37738993c4d180ed7cbf8413de3883c1b1acda001fa271"
    },
    {
      "name": "MQTT",
      "version": "1.3.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "paho mqtt library wrapper for arduino",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the eclipse paho project and adds a thin wrapper to get an Arduino like API.",
      "website": "http://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/256dpi/arduino-mqtt/archive/v1.3.zip",
      "archiveFileName": "MQTT-1.3.0-github.zip",
      "size": 35878,
      "checksum": "SHA-256:2b05dc2eff5115885a2af93a31abe9a502672be2c941f554f08544365cade34e"
    },
    {
      "name": "MQTT",
      "version": "1.3.2",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "Paho MQTT library wrapper for Arduino.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the eclipse paho project and adds a thin wrapper to get an Arduino like API.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/256dpi/arduino-mqtt/archive/v1.3.2.zip",
      "archiveFileName": "MQTT-1.3.2-github.zip",
      "size": 35999,
      "checksum": "SHA-256:ee6367abcfc1c48191817260b51b3f82e31b5536b3d589a44db1a2c58eb9715a"
    },
    {
      "name": "MQTT",
      "version": "1.4.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower resources usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/256dpi/arduino-mqtt/archive/v1.4.0.zip",
      "archiveFileName": "MQTT-1.4.0-github.zip",
      "size": 40307,
      "checksum": "SHA-256:0ab22261903f34e7f6727173652759dd351fda124b394cf2db4f9cbf159e3d84"
    },
    {
      "name": "MQTT",
      "version": "1.5.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/256dpi/arduino-mqtt/archive/v1.5.0.zip",
      "archiveFileName": "MQTT-1.5.0-github.zip",
      "size": 59101,
      "checksum": "SHA-256:bcf10afdf788336e558a0c7d01f1dc321389185cce075a0426c0d41752145462"
    },
    {
      "name": "Adafruit STMPE610",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for STMPE610/811 resistive touch screen controllers",
      "paragraph": "Arduino library for STMPE610/811 resistive touch screen controllers",
      "website": "https://github.com/adafruit/Adafruit_STMPE610",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_STMPE610/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_STMPE610-1.0.0-github.zip",
      "size": 7084,
      "checksum": "SHA-256:3c16b8670659fafa7944c6cc30e50d10c6c2a55a9392559b6033eef47b4776a2"
    },
    {
      "name": "Adafruit MPL115A2",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for the Adafruit MPL115A2 barometric pressure sensor breakout",
      "paragraph": "Driver for the Adafruit MPL115A2 barometric pressure sensor breakout",
      "website": "https://github.com/adafruit/Adafruit_MPL115A2",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_MPL115A2/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_MPL115A2-1.0.0-github.zip",
      "size": 5816,
      "checksum": "SHA-256:ca431016ded14f3ab1b4308cbc3cee9bbc4dfc7cfc4815df02bf40e73544df87"
    },
    {
      "name": "Adafruit SHARP Memory Display",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "paragraph": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "website": "https://github.com/adafruit/Adafruit_SHARP_Memory_Display",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_SHARP_Memory_Display/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_SHARP_Memory_Display-1.0.0-github.zip",
      "size": 6746,
      "checksum": "SHA-256:f70f857c9552fb520c340a7de50a70daf13df844a0f179d74b264e401fceb15d"
    },
    {
      "name": "Adafruit TCS34725",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's TCS34725 RGB Color Sensor Breakout",
      "paragraph": "Driver for Adafruit's TCS34725 RGB Color Sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_TCS34725",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_TCS34725/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_TCS34725-1.0.0-github.zip",
      "size": 12604,
      "checksum": "SHA-256:f46707e08b42195d669d4ecc1c0192b711439b0c1f7b76f0d03b3b188c4e91f1"
    },
    {
      "name": "ALA",
      "version": "2.0.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino Light Animation (ALA) is a library",
      "paragraph": "Arduino Light Animation (ALA) is a library for Arduino boards to simplify the development of light animations using LEDs and LED strips.",
      "website": "https://github.com/bportaluri/ALA",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/bportaluri/ALA/archive/v2.0.0.zip",
      "archiveFileName": "ALA-2.0.0-github.zip",
      "size": 900957,
      "checksum": "SHA-256:4fb04c1f0b5ba5be548706cf6476acf4eb0ca2eb050f0a10c4e90cba3b6f1cb4"
    },
    {
      "name": "Adafruit FRAM SPI",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's SPI-Based FRAM Breakouts",
      "paragraph": "Driver for Adafruit's SPI-Based FRAM Breakouts",
      "website": "https://github.com/adafruit/Adafruit_FRAM_SPI",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_FRAM_SPI/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_FRAM_SPI-1.0.0-github.zip",
      "size": 6910,
      "checksum": "SHA-256:fe7d34e1adef11f244f4cf2c3040a96dc49cf68a1f3578cb3e3a595d3d3a6d49"
    },
    {
      "name": "Adafruit INA219",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "INA219 Current Sensor",
      "paragraph": "INA219 Current Sensor",
      "website": "https://github.com/adafruit/Adafruit_INA219",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_INA219/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_INA219-1.0.0-github.zip",
      "size": 7512,
      "checksum": "SHA-256:fea9ebd3908d75b49541c8686fb02e51c0567f4fc75ac8f03ec1b9d96d1a799c"
    },
    {
      "name": "Adafruit PS2 Trackpad",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "PS2 library for Adafruit capacitive trackpads",
      "paragraph": "PS2 library for Adafruit capacitive trackpads",
      "website": "https://github.com/adafruit/Adafruit-PS2-Trackpad",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-PS2-Trackpad/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_PS2_Trackpad-1.0.0-github.zip",
      "size": 6044,
      "checksum": "SHA-256:c012afe026a8c4adef6c88b325c9407982dca9d3d560b2147cca7b0af19cd7f4"
    },
    {
      "name": "Adafruit TinyFlash",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Barebones Winbond SPI flash library for Arduino and Trinket",
      "paragraph": "Barebones Winbond SPI flash library for Arduino and Trinket",
      "website": "https://github.com/adafruit/Adafruit_TinyFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_TinyFlash/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_TinyFlash-1.0.0-github.zip",
      "size": 9495,
      "checksum": "SHA-256:6d59d7e769dc95a8ff99b1582b6d3f9d2ef442598dc1f1df1d0a0973100be742"
    },
    {
      "name": "LPD6803 RGB Pixels",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Controlling library for strands of LPD6803 LED pixel dots.",
      "paragraph": "Controlling library for strands of LPD6803 LED pixel dots.",
      "website": "https://github.com/adafruit/LPD6803-RGB-Pixels",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/LPD6803-RGB-Pixels/archive/1.0.0.zip",
      "archiveFileName": "LPD6803_RGB_Pixels-1.0.0-github.zip",
      "size": 5386,
      "checksum": "SHA-256:14d2d7670d08ec1d3ccb66ce1fbc8c5929ae3bde65cb4986433c8f568e41c3f6"
    },
    {
      "name": "Adafruit HTU21DF Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the HTU21D-F sensors in the Adafruit shop",
      "paragraph": "Arduino library for the HTU21D-F sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_HTU21DF_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_HTU21DF_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_HTU21DF_Library-1.0.0-github.zip",
      "size": 4212,
      "checksum": "SHA-256:a1a8c2e36c3a3b0118bfc992a813d0be652bc6bba57487a45557a35bca9a3f43"
    },
    {
      "name": "Adafruit Fingerprint Sensor Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for interfacing to the fingerprint sensor in the Adafruit shop",
      "paragraph": "Arduino library for interfacing to the fingerprint sensor in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-Fingerprint-Sensor-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-Fingerprint-Sensor-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_Fingerprint_Sensor_Library-1.0.0-github.zip",
      "size": 2395929,
      "checksum": "SHA-256:4896005f8d7f5b774f23540d639fc8500337cb598d903fd650ba0f80b678b807"
    },
    {
      "name": "Adafruit HX8357 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit HX8357 3.5\" display library.",
      "paragraph": "Adafruit HX8357 3.5\" display library.",
      "website": "https://github.com/adafruit/Adafruit_HX8357_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_HX8357_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_HX8357_Library-1.0.0-github.zip",
      "size": 315492,
      "checksum": "SHA-256:27c27cc5f2e04ac4aecc064df445637f44f0a09565717a581272aa463597cf24"
    },
    {
      "name": "Adafruit MLX90614 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MLX90614 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MLX90614 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-MLX90614-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-MLX90614-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_MLX90614_Library-1.0.0-github.zip",
      "size": 4373,
      "checksum": "SHA-256:f5af49a2427e6e3feafb28faab316eee241700374c084b9c003510bd39a81b0a"
    },
    {
      "name": "Adafruit NeoMatrix",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_GFX-compatible library for NeoPixel grids",
      "paragraph": "Adafruit_GFX-compatible library for NeoPixel grids",
      "website": "https://github.com/adafruit/Adafruit_NeoMatrix",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_NeoMatrix/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_NeoMatrix-1.0.0-github.zip",
      "size": 23346,
      "checksum": "SHA-256:9f8e3e64ccf53824428e9ca6ad0f80c3c9be4ce47f04edeec8987bb5af389cc3"
    },
    {
      "name": "Adafruit TMP006",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit TMP006 Infrared Thermopile Sensor",
      "paragraph": "This is a library for the Adafruit TMP006 Infrared Thermopile Sensor",
      "website": "https://github.com/adafruit/Adafruit_TMP006",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_TMP006/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_TMP006-1.0.0-github.zip",
      "size": 5733,
      "checksum": "SHA-256:8d8a46df58772c2395a433cd80e7601ce5d68ae24c19e929084e940bca03f781"
    },
    {
      "name": "Adafruit TSL2561",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for Adafruit's TSL2561 breakouts",
      "paragraph": "Unified sensor driver for Adafruit's TSL2561 breakouts",
      "website": "https://github.com/adafruit/Adafruit_TSL2561",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_TSL2561/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_TSL2561-1.0.0-github.zip",
      "size": 12632,
      "checksum": "SHA-256:1dad8066b07ac885b1ba98a6affeee5712eb29ae860999660d431e056d5bf55d"
    },
    {
      "name": "Time",
      "version": "1.4.0",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Timekeeping functionality for Arduino",
      "paragraph": "Date and Time functions, with provisions to synchronize to external time sources like GPS and NTP (Internet).",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/Time/archive/1.4.zip",
      "archiveFileName": "Time-1.4.0-github.zip",
      "size": 25465,
      "checksum": "SHA-256:1b658b9d71cddd4c24a63ec5c0c1cf345a44b32d46e0a207c7e129f8bc6e6492"
    },
    {
      "name": "Adafruit CC3000 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library code for Adafruit's CC3000 WiFi breakouts.",
      "paragraph": "The CC3000 allows an Arduino to connect to a WiFi network and access the internet.  See more at: https://learn.adafruit.com/adafruit-cc3000-wifi/",
      "website": "https://github.com/adafruit/Adafruit_CC3000_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_CC3000_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_CC3000_Library-1.0.0-github.zip",
      "size": 243462,
      "checksum": "SHA-256:6588b0b2ce92977e2515a5f56372a3a77308b713966c0766830073e73b2b7836"
    },
    {
      "name": "Adafruit TPA2016 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit TPA2016(D2) I2C controlled AGC audio amplifier",
      "paragraph": "Arduino library for the Adafruit TPA2016(D2) I2C controlled AGC audio amplifier",
      "website": "https://github.com/adafruit/Adafruit-TPA2016-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-TPA2016-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_TPA2016_Library-1.0.0-github.zip",
      "size": 5486,
      "checksum": "SHA-256:147b0adce2b80d551f868951b4c71dbb0f5b162159edbf3d67024e43d7baa10c"
    },
    {
      "name": "Robot IR Remote",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows controlling the Arduino Robot via an IR remote control. For Arduino Robot only.",
      "website": "https://github.com/shirriff/Arduino-IRremote",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/RobotIRremote/archive/1.0.0.zip",
      "archiveFileName": "Robot_IR_Remote-1.0.0-github.zip",
      "size": 22487,
      "checksum": "SHA-256:989a6f772bab0ff0fd74d8c094b8397239ab44ae86e8460acfb942acaf064f4f"
    },
    {
      "name": "Robot IR Remote",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows controlling the Arduino Robot via an IR remote control. For Arduino Robot only.",
      "website": "https://github.com/shirriff/Arduino-IRremote",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/RobotIRremote/archive/1.0.1.zip",
      "archiveFileName": "Robot_IR_Remote-1.0.1-github.zip",
      "size": 22564,
      "checksum": "SHA-256:fa3d219fcaacb8c92969a0569b3a339a737fad23a1ae6913a82b5e30e4a35ce0"
    },
    {
      "name": "FreqMeasure",
      "version": "1.2.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "FreqMeasure measures the elapsed time during each cycle of an input frequency.",
      "website": "http://www.pjrc.com/teensy/td_libs_FreqMeasure.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/FreqMeasure/archive/1.2.zip",
      "archiveFileName": "FreqMeasure-1.2.0-github.zip",
      "size": 7964,
      "checksum": "SHA-256:2525def111d65b85699d2a96b457fc72dc7dbd3a9074337d38c7c06ba8951b92"
    },
    {
      "name": "Adafruit L3GD20",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's L3GD20 I2C Gyroscope Breakout",
      "paragraph": "Driver for Adafruit's L3GD20 I2C Gyroscope Breakout",
      "website": "https://github.com/adafruit/Adafruit_L3GD20",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_L3GD20/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_L3GD20-1.0.0-github.zip",
      "size": 6717,
      "checksum": "SHA-256:20f61890943246b8abe67875a31d356f7cb854e815cb3ddf8c95a051e017940b"
    },
    {
      "name": "TinyLiquidCrystal",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A simplified library for the Adafruit I2C/SPI backpack, for use with Gemma \u0026 Trinket",
      "paragraph": "A simplified library for the Adafruit I2C/SPI backpack, for use with Gemma \u0026 Trinket",
      "website": "https://github.com/adafruit/TinyLiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/TinyLiquidCrystal/archive/1.0.0.zip",
      "archiveFileName": "TinyLiquidCrystal-1.0.0-github.zip",
      "size": 11096,
      "checksum": "SHA-256:ac4912940ae87b66758171870ee219ae15dbfa094d70c90cfed52bf83fc13dcd"
    },
    {
      "name": "TFT",
      "version": "1.0.0",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/TFT/archive/1.0.0.zip",
      "archiveFileName": "TFT-1.0.0-github.zip",
      "size": 46681,
      "checksum": "SHA-256:a98d127c7ea5ce59b3b6b6d1fde7afc71030cf770118936973babcbbc20f17a4"
    },
    {
      "name": "TFT",
      "version": "1.0.1",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/TFT/archive/1.0.1.zip",
      "archiveFileName": "TFT-1.0.1-github.zip",
      "size": 48222,
      "checksum": "SHA-256:c70605d61b1274195ee0b5c334cb9b5b2a7f54e370fd01db027508d08a0fb43d"
    },
    {
      "name": "TFT",
      "version": "1.0.2",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/TFT/archive/1.0.2.zip",
      "archiveFileName": "TFT-1.0.2-github.zip",
      "size": 48230,
      "checksum": "SHA-256:6a75c5aa2157ae6435596fc5e7c139a2ad6e4f6aee8321ea0630c3f049f08df7"
    },
    {
      "name": "FreqCount",
      "version": "1.2.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "FreqCount measures the frequency of a signal by counting the number of pulses during a fixed time.",
      "website": "http://www.pjrc.com/teensy/td_libs_FreqCount.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/FreqCount/archive/1.2.zip",
      "archiveFileName": "FreqCount-1.2.0-github.zip",
      "size": 8768,
      "checksum": "SHA-256:430ea0edf653fad38d09d5b730188b90efadb3f9bf0281ad6b4b7a38da337210"
    },
    {
      "name": "RGB matrix Panel",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "paragraph": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "website": "https://github.com/adafruit/RGB-matrix-Panel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/RGB-matrix-Panel/archive/1.0.0.zip",
      "archiveFileName": "RGB_matrix_Panel-1.0.0-github.zip",
      "size": 29091,
      "checksum": "SHA-256:5c989b3019cba45d5ed8dd48acec4209c729470d30dc5980fd33b65c5ec8802e"
    },
    {
      "name": "Adafruit TSL2591 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the TSL2591 digital luminosity (light) sensors.",
      "paragraph": "Library for the TSL2591 digital luminosity (light) sensors.",
      "website": "https://github.com/adafruit/Adafruit_TSL2591_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_TSL2591_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_TSL2591_Library-1.0.0-github.zip",
      "size": 9621,
      "checksum": "SHA-256:f9ad550d327e8b9e9bf734a690c317f8829439f08e4acce505f455e7f4cd441f"
    },
    {
      "name": "Adafruit Motor Shield V2 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "paragraph": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "website": "https://github.com/adafruit/Adafruit_Motor_Shield_V2_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_Motor_Shield_V2_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_Motor_Shield_V2_Library-1.0.0-github.zip",
      "size": 17984,
      "checksum": "SHA-256:fb4b6bd7b877999f71b3a509de3b5fdec10272c361cfb431d77b2cbc94099198"
    },
    {
      "name": "Adafruit HX8340B",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit 2.2\" TFT with SPI interface and microSD card holder",
      "paragraph": "Adafruit 2.2\" TFT with SPI interface and microSD card holder",
      "website": "https://github.com/adafruit/Adafruit-HX8340B",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-HX8340B/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_HX8340B-1.0.0-github.zip",
      "size": 213551,
      "checksum": "SHA-256:117a540e466ea91ae9766ea0c6971f128e61f66123a81cc1846eb6a7ec346b6b"
    },
    {
      "name": "Bridge",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Bridge/archive/1.0.0.zip",
      "archiveFileName": "Bridge-1.0.0-github.zip",
      "size": 85387,
      "checksum": "SHA-256:4f93fa56253a840e44cfdac0850b623f9e9e5bfb816e13d25df539837253eb95"
    },
    {
      "name": "Bridge",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Bridge/archive/1.0.1.zip",
      "archiveFileName": "Bridge-1.0.1-github.zip",
      "size": 85404,
      "checksum": "SHA-256:21a65763498e890cc01c833a7c24c57782550a3671b1a09f4e14171023158e01"
    },
    {
      "name": "Bridge",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Bridge/archive/1.0.2.zip",
      "archiveFileName": "Bridge-1.0.2-github.zip",
      "size": 85408,
      "checksum": "SHA-256:23a26a652402610211fd053a11adf40935b0253b44464604e28ddc3dc0c9f5bb"
    },
    {
      "name": "Bridge",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Bridge/archive/1.0.3.zip",
      "archiveFileName": "Bridge-1.0.3-github.zip",
      "size": 85451,
      "checksum": "SHA-256:174b547a7c46233f552c5c7ec8fc479138085338f352db230459a4d5079abc3d"
    },
    {
      "name": "Bridge",
      "version": "1.0.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Bridge/archive/1.0.4.zip",
      "archiveFileName": "Bridge-1.0.4-github.zip",
      "size": 85470,
      "checksum": "SHA-256:5b86e0ce862c498ca7fcd1304c2d9dc0455ff836b265efcb65feaf43f746efa0"
    },
    {
      "name": "Adafruit MPL3115A2 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MPL3115A2 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MPL3115A2 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_MPL3115A2_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_MPL3115A2_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_MPL3115A2_Library-1.0.0-github.zip",
      "size": 6295,
      "checksum": "SHA-256:1b6f94cdfcacc3e6e92b2404f24f4c9e23e4470afd801c9ac691c97ac00a4e59"
    },
    {
      "name": "TinyRTCLib",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A tiny version of RTCLib, for use with TinyWireM",
      "paragraph": "A tiny version of RTCLib, for use with TinyWireM",
      "website": "https://github.com/adafruit/TinyRTCLib",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/TinyRTCLib/archive/1.0.0.zip",
      "archiveFileName": "TinyRTCLib-1.0.0-github.zip",
      "size": 6147,
      "checksum": "SHA-256:8c3f044c9a4d5840f4539e778a8f7e0d51d71610e954ef798889f3894341b110"
    },
    {
      "name": "Robot Control",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the controls of the Arduino Robot Control board. For Arduino Robot only.",
      "paragraph": "The Arduino robot is made by two independent boards. The Control Board is the top board of the Arduino Robot, with this library you can easily write sketches to control the robot.",
      "website": "http://arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Robot_Control/archive/1.0.0.zip",
      "archiveFileName": "Robot_Control-1.0.0-github.zip",
      "size": 113406,
      "checksum": "SHA-256:4b06e032feb388270c7bf0553b1173296d12f50110146e7495f43e9939eddafc"
    },
    {
      "name": "Robot Control",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the controls of the Arduino Robot Control board. For Arduino Robot only.",
      "paragraph": "The Arduino robot is made by two independent boards. The Control Board is the top board of the Arduino Robot, with this library you can easily write sketches to control the robot.",
      "website": "http://arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Robot_Control/archive/1.0.1.zip",
      "archiveFileName": "Robot_Control-1.0.1-github.zip",
      "size": 113462,
      "checksum": "SHA-256:365a6ad77d01d4f1f5e9a7d37f61c8b8136c64dac481b9c2b287d15bc8337240"
    },
    {
      "name": "Robopoly Linear Camera",
      "version": "0.2.0",
      "author": "Marco Pagnamenta, Karl Kangur, David Perrenoud, Robopoly",
      "maintainer": "Robopoly \u003crobopoly@epfl.ch\u003e",
      "sentence": "This library allows you to get data from the Robopoly Linear Camera.",
      "website": "https://github.com/Robopoly/Robopoly_PRismino",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/Robopoly/Robopoly_Linear_Camera/archive/0.2.zip",
      "archiveFileName": "Robopoly_Linear_Camera-0.2.0-github.zip",
      "size": 5819,
      "checksum": "SHA-256:3e1cd8852d599d3ee2b28459a8d6ed1d1f1e747e9a9137d6678a4929570b4bd9"
    },
    {
      "name": "Adafruit HMC5883 Unified",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit HMC5883L 3-Axis Magnetometer Breakout library using Adafruit's Unified Sensor Library.",
      "paragraph": "Adafruit HMC5883L 3-Axis Magnetometer Breakout library using Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_HMC5883_Unified",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_HMC5883_Unified/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_HMC5883_Unified-1.0.0-github.zip",
      "size": 7559,
      "checksum": "SHA-256:91255795f108b80628a0d3e133cea13b53bead1d906d7bc7765ba8689f40adcc"
    },
    {
      "name": "Adafruit GPS Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "An interrupt-based GPS library for no-parsing-required use",
      "paragraph": "An interrupt-based GPS library for no-parsing-required use",
      "website": "https://github.com/adafruit/Adafruit-GPS-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-GPS-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_GPS_Library-1.0.0-github.zip",
      "size": 47834,
      "checksum": "SHA-256:19d23edd3a923afeaa4d99a363f3fc0d574a3b917dd0c90bb0d709869b3e7423"
    },
    {
      "name": "Adafruit MCP4725",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MCP4725 12-bit I2C DAC",
      "paragraph": "MCP4725 12-bit I2C DAC",
      "website": "https://github.com/adafruit/Adafruit_MCP4725",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_MCP4725/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_MCP4725-1.0.0-github.zip",
      "size": 28552,
      "checksum": "SHA-256:cd170c474c861dab012a9f7cbff1986eba6fa5a9a75833ea723b1746df10c8ad"
    },
    {
      "name": "Adafruit SSD1351 library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit library for the 1.27\" and 1.5\" color OLEDs in the shop",
      "paragraph": "Adafruit library for the 1.27\" and 1.5\" color OLEDs in the shop",
      "website": "https://github.com/adafruit/Adafruit-SSD1351-library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-SSD1351-library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_SSD1351_library-1.0.0-github.zip",
      "size": 106314,
      "checksum": "SHA-256:468d2b7eb0c53459c9326e440083ef251a9875aa66a73359f2afff6007775830"
    },
    {
      "name": "SPI VFD",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for 20T202DA2JA SPI VFD",
      "paragraph": "Arduino Library for 20T202DA2JA SPI VFD",
      "website": "https://github.com/adafruit/SPI_VFD",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/SPI_VFD/archive/1.0.0.zip",
      "archiveFileName": "SPI_VFD-1.0.0-github.zip",
      "size": 16858,
      "checksum": "SHA-256:b4f5d8fe9940fe424d78e9617c6bfd3c191685172b0d5bc21b13f4303174fabc"
    },
    {
      "name": "Encoder",
      "version": "1.3.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Counts quadrature pulses from rotary \u0026 linear position encoders.",
      "paragraph": "Encoder counts pulses from quadrature encoded signals, which are commonly available from rotary knobs, motor or shaft sensors and other position sensors.",
      "website": "http://www.pjrc.com/teensy/td_libs_Encoder.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/Encoder/archive/1.3.zip",
      "archiveFileName": "Encoder-1.3.0-github.zip",
      "size": 14757,
      "checksum": "SHA-256:009f1be26467f1a8ed582f0f46fc99c87efc362a741751603ceddebcdf2ec8d7"
    },
    {
      "name": "PololuMaestro",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Pololu Maestro Servo Controller library for Arduino",
      "paragraph": "This is a library for the Arduino IDE that helps interface with a Maestro Servo Controller. It communicates with Maestros using the Serial Protocol described in the Maestro Servo Controller User's Guide Section 5, \"Serial Interface\".",
      "website": "https://github.com/pololu/maestro-arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/pololu/maestro-arduino/archive/1.0.0.zip",
      "archiveFileName": "PololuMaestro-1.0.0-github.zip",
      "size": 16681,
      "checksum": "SHA-256:a6c4feb1124671bc5e5d62b2e568e7ef02dcf625d4ef581767896eed5552c1e2"
    },
    {
      "name": "Adafruit FONA Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit FONA",
      "paragraph": "Arduino library for the Adafruit FONA",
      "website": "https://github.com/adafruit/Adafruit_FONA_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_FONA_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_FONA_Library-1.0.0-github.zip",
      "size": 16830,
      "checksum": "SHA-256:f2ac8bfcc8c61e1fca4343d143069ffc57f511e99804bf4bf78b46737231f81c"
    },
    {
      "name": "Adafruit FRAM I2C",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's I2C-Based FRAM Breakouts",
      "paragraph": "Driver for Adafruit's I2C-Based FRAM Breakouts",
      "website": "https://github.com/adafruit/Adafruit_FRAM_I2C",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_FRAM_I2C/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_FRAM_I2C-1.0.0-github.zip",
      "size": 6153,
      "checksum": "SHA-256:2961b36693b70259e96a088f2abe4f282511cc44bb6e6baa028c76ccbd411469"
    },
    {
      "name": "Adafruit LSM303DLHC",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "paragraph": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "website": "https://github.com/adafruit/Adafruit_LSM303DLHC",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_LSM303DLHC/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_LSM303DLHC-1.0.0-github.zip",
      "size": 9373,
      "checksum": "SHA-256:eaffc4136247360d2185ec442dfb700773042d39749b7a23831c19591ee2157f"
    },
    {
      "name": "Adafruit ST7735 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit 1.8\" SPI displays.",
      "paragraph": "This is a library for the Adafruit 1.8\" SPI displays.",
      "website": "https://github.com/adafruit/Adafruit-ST7735-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-ST7735-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_ST7735_Library-1.0.0-github.zip",
      "size": 25056,
      "checksum": "SHA-256:257b56bc8a66f69d687eb8d5fde36b20054936ce75e28697d9fa9a93d2fcfc86"
    },
    {
      "name": "Pro Trinket USB Mouse",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Pro trinket to turn it into a mouse!",
      "paragraph": "Library for Pro trinket to turn it into a mouse!",
      "website": "https://github.com/adafruit/Pro_Trinket_USB_Mouse",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Pro_Trinket_USB_Mouse/archive/1.0.0.zip",
      "archiveFileName": "Pro_Trinket_USB_Mouse-1.0.0-github.zip",
      "size": 977330,
      "checksum": "SHA-256:c567bc871d89b555c0245d1ef01b6b15e025a51837772ea6c5c9eb9e0ed87b2b"
    },
    {
      "name": "TinyWireM",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "I2C library for Trinket and Gemma, adapted from BroHogan's code on Arduino Playground",
      "paragraph": "I2C library for Trinket and Gemma, adapted from BroHogan's code on Arduino Playground",
      "website": "https://github.com/adafruit/TinyWireM",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/TinyWireM/archive/1.0.0.zip",
      "archiveFileName": "TinyWireM-1.0.0-github.zip",
      "size": 16422,
      "checksum": "SHA-256:9554191d0d4dbaf75de9bc69f1e6234c5484ddec0a52c28bb23b168b0ed21320"
    },
    {
      "name": "AltSoftSerial",
      "version": "1.2.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Software emulated serial using hardware timers for improved compatibility",
      "paragraph": "Improved software emulated serial, using hardware timers for precise signal timing and improved compatibility with other interrupt-based libraries.",
      "website": "http://www.pjrc.com/teensy/td_libs_AltSoftSerial.html",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/AltSoftSerial/archive/1.2.1.zip",
      "archiveFileName": "AltSoftSerial-1.2.0-github.zip",
      "size": 10585,
      "checksum": "SHA-256:5df06474a2707c0f41151a3dbddc978e16684cd29a89905b27b3a7821d647d36"
    },
    {
      "name": "DS1307RTC",
      "version": "1.4.0",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use a DS1307 Real Time Clock chip with the Time library",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/DS1307RTC/archive/1.4.zip",
      "archiveFileName": "DS1307RTC-1.4.0-github.zip",
      "size": 5259,
      "checksum": "SHA-256:990224f0b8553f29a71720e291b8ed44082a83d064b8c503dcfb7badac41de4c"
    },
    {
      "name": "Adafruit Flora Pixel Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for Adafruit Flora Pixels",
      "paragraph": "Arduino Library for Adafruit Flora Pixels",
      "website": "https://github.com/adafruit/Adafruit-Flora-Pixel-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-Flora-Pixel-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_Flora_Pixel_Library-1.0.0-github.zip",
      "size": 4941,
      "checksum": "SHA-256:d88cce6bd846676b841a79ee9098d76ff3559600618cd4b50927e4412c16e65a"
    },
    {
      "name": "Adafruit PN532",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for SPI and I2C access to the PN532 RFID/Near Field Communication chip",
      "paragraph": "Arduino library for SPI and I2C access to the PN532 RFID/Near Field Communication chip",
      "website": "https://github.com/adafruit/Adafruit-PN532",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-PN532/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_PN532-1.0.0-github.zip",
      "size": 56631,
      "checksum": "SHA-256:203a60c1b3003d9fa09d10a3a73a4f1af0f0e49859efdea392d0e12664105f23"
    },
    {
      "name": "DHT sensor library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/DHT-sensor-library/archive/1.0.0.zip",
      "archiveFileName": "DHT_sensor_library-1.0.0-github.zip",
      "size": 4835,
      "checksum": "SHA-256:1e82dd391a023c2ed0804542156effdd8b852ba8672f949ff69db8532566fe4e"
    },
    {
      "name": "GSM",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/GSM/archive/1.0.0.zip",
      "archiveFileName": "GSM-1.0.0-github.zip",
      "size": 129189,
      "checksum": "SHA-256:1fc849cb32bfc847efaf48fc32476900218973805b3c674c156bc44493a1d1a8"
    },
    {
      "name": "GSM",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/GSM/archive/1.0.1.zip",
      "archiveFileName": "GSM-1.0.1-github.zip",
      "size": 129189,
      "checksum": "SHA-256:63d5ef3677bc14b9110f916733a02d4ab4ac6838ba5b2f244823562ccf2c7318"
    },
    {
      "name": "GSM",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/GSM/archive/1.0.2.zip",
      "archiveFileName": "GSM-1.0.2-github.zip",
      "size": 148553,
      "checksum": "SHA-256:ba6731a73512913a608fdfdea9d47e5a717e7299f02e42d3e626879b77e90cdb"
    },
    {
      "name": "GSM",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/GSM/archive/1.0.3.zip",
      "archiveFileName": "GSM-1.0.3-github.zip",
      "size": 148593,
      "checksum": "SHA-256:04ce15442d172ffded7bddd26245d2507801bc3e1828ffa59dd0da5d17c255cf"
    },
    {
      "name": "SerialFlash",
      "version": "0.1.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access SPI Serial Flash memory with filesystem-like functions",
      "paragraph": "SerialFlash provides low-latency, high performance access to SPI Flash memory with a filesystem-like interface. Familiar file-based functions, similar to the SD library, are used to access data.",
      "website": "https://github.com/PaulStoffregen/SerialFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/SerialFlash/archive/0.1.zip",
      "archiveFileName": "SerialFlash-0.1.0-github.zip",
      "size": 21564,
      "checksum": "SHA-256:bff38e65c2690464d8cfe851b6df32368f89c914a066520d7ce71181e3eb8dd5"
    },
    {
      "name": "Adafruit MAX31855 library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "paragraph": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "website": "https://github.com/adafruit/Adafruit-MAX31855-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-MAX31855-library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_MAX31855_library-1.0.0-github.zip",
      "size": 7734,
      "checksum": "SHA-256:803172db20404d69ad0735fd5cbbcd799ec6e2e9f769154d745eb0f6fad6a25c"
    },
    {
      "name": "TimerThree",
      "version": "1.1.0",
      "author": "Jesse Tane, Jérôme Despatis, Michael Polli, Dan Clemens, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use hardware Timer3 for finer PWM control and/or running an periodic interrupt function",
      "website": "http://playground.arduino.cc/Code/Timer1",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/TimerThree/archive/1.1.zip",
      "archiveFileName": "TimerThree-1.1.0-github.zip",
      "size": 8353,
      "checksum": "SHA-256:702a00cd3f22edd46f4a10730343f32f2563e18c4ec5ee1640f64a3e9fa7dc70"
    },
    {
      "name": "Robopoly PRismino",
      "version": "1.5.0",
      "author": "Karl Kangur, David Perrenoud, Robopoly",
      "maintainer": "Robopoly \u003crobopoly@epfl.ch\u003e",
      "sentence": "This library allows you to use all the functions of the Robopoly PRismino and the Robopoly Shield.",
      "website": "https://github.com/Robopoly/Robopoly_PRismino",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/Robopoly/Robopoly_PRismino/archive/1.5.zip",
      "archiveFileName": "Robopoly_PRismino-1.5.0-github.zip",
      "size": 21425,
      "checksum": "SHA-256:8aff8af5757ebfd4838c419686084dc99dd8da5ae68928c3343dfd7efdae8cb9"
    },
    {
      "name": "OneWire",
      "version": "2.3.0",
      "author": "Jim Studt, Tom Pollard, Robin James, Glenn Trewitt, Jason Dangel, Guillermo Lovato, Paul Stoffregen, Scott Roberts, Bertrik Sikken, Mark Tillotson, Ken Butcher, Roger Clark, Love Nystrom",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access 1-wire temperature sensors, memory and other chips.",
      "website": "http://www.pjrc.com/teensy/td_libs_OneWire.html",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/OneWire/archive/2.3.zip",
      "archiveFileName": "OneWire-2.3.0-github.zip",
      "size": 16709,
      "checksum": "SHA-256:80197235578e7eda311300f9284ce7db41a9bfd60867bd9b7857e35b05de10b3"
    },
    {
      "name": "Adafruit TMP007 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for Adafruit TMP007 Thermopile sensor Breakout",
      "paragraph": "Arduino library for Adafruit TMP007 Thermopile sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_TMP007_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_TMP007_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_TMP007_Library-1.0.0-github.zip",
      "size": 5256,
      "checksum": "SHA-256:cfd92dbd3380d5b41cdf890bff439d4dae438a76a988f835227cf8d4369ce9f9"
    },
    {
      "name": "Adafruit AHRS",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "paragraph": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "website": "https://github.com/adafruit/Adafruit_AHRS",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_AHRS/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_AHRS-1.0.0-github.zip",
      "size": 796542,
      "checksum": "SHA-256:7306ca94daed35375cf0208631f743fa3951296961bf78ec15ed3bcfe5bbf932"
    },
    {
      "name": "Adafruit Si4713 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Si4714 FM+RDS Transmitter in the Adafruit shop",
      "paragraph": "Arduino library for the Si4714 FM+RDS Transmitter in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-Si4713-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-Si4713-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_Si4713_Library-1.0.0-github.zip",
      "size": 7885,
      "checksum": "SHA-256:cf028a16184ffdd95dd4805c4169c84e1551f3c6dd5463c2a17a61f451ab5437"
    },
    {
      "name": "Firmata",
      "version": "2.3.6",
      "author": "Firmata Developers",
      "maintainer": "Firmata Developers \u003cfirmata-devel@lists.sourceforge.net\u003e",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "http://firmata.org",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Firmata/archive/2.3.6.zip",
      "archiveFileName": "Firmata-2.3.6-github.zip",
      "size": 58351,
      "checksum": "SHA-256:7ad8ad30d80ce7813dcf636801ab47a59c2406fb62e6a523445001fba73d25ae"
    },
    {
      "name": "Firmata",
      "version": "2.3.7",
      "author": "Firmata Developers",
      "maintainer": "Firmata Developers \u003cfirmata-devel@lists.sourceforge.net\u003e",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "http://firmata.org",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Firmata/archive/2.3.7.zip",
      "archiveFileName": "Firmata-2.3.7-github.zip",
      "size": 58375,
      "checksum": "SHA-256:5b260422d6f1372840b103c843296fbf9c45ddce408108e249093354703f9d06"
    },
    {
      "name": "Firmata",
      "version": "2.3.8",
      "author": "Firmata Developers",
      "maintainer": "Firmata Developers \u003cfirmata-devel@lists.sourceforge.net\u003e",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "http://firmata.org",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Firmata/archive/2.3.8.zip",
      "archiveFileName": "Firmata-2.3.8-github.zip",
      "size": 58378,
      "checksum": "SHA-256:27f8e08406f6557be8b79c2716ba50a57b4768a1beee4e190f8cab2e3eb8aba4"
    },
    {
      "name": "MsTimer2",
      "version": "1.1.0",
      "author": "Javier Valencia",
      "maintainer": "Paul Stoffregen",
      "sentence": "Run an interrupt function using Timer2",
      "website": "http://playground.arduino.cc/Main/MsTimer2",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/MsTimer2/archive/1.1.zip",
      "archiveFileName": "MsTimer2-1.1.0-github.zip",
      "size": 4841,
      "checksum": "SHA-256:1ac7d46cfdaea00537af1cb9bd6d502aec2707b73417598b9bcc754a87044203"
    },
    {
      "name": "Adafruit Motor Shield library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit Motor shield V1 firmware with basic Microstepping support. Works with all Arduinos and the Mega",
      "paragraph": "Adafruit Motor shield V1 firmware with basic Microstepping support. Works with all Arduinos and the Mega",
      "website": "https://github.com/adafruit/Adafruit-Motor-Shield-library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-Motor-Shield-library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_Motor_Shield_library-1.0.0-github.zip",
      "size": 12223,
      "checksum": "SHA-256:7c1b1701f45b93f18b2c3a40b667e2c8cfab35b288c9bad57aebac97278ee70a"
    },
    {
      "name": "Adafruit Thermal Printer Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for Small Thermal Printers",
      "paragraph": "Arduino Library for Small Thermal Printers",
      "website": "https://github.com/adafruit/Adafruit-Thermal-Printer-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-Thermal-Printer-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_Thermal_Printer_Library-1.0.0-github.zip",
      "size": 19478,
      "checksum": "SHA-256:3b883b699035b30eb89ed7f66ff3f05698b9bbcac700b80e71dedd1eb8bb1c8a"
    },
    {
      "name": "Adafruit Thermal Printer Library",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for Small Thermal Printers",
      "paragraph": "Arduino Library for Small Thermal Printers",
      "website": "https://github.com/adafruit/Adafruit-Thermal-Printer-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-Thermal-Printer-Library/archive/1.1.0.zip",
      "archiveFileName": "Adafruit_Thermal_Printer_Library-1.1.0-github.zip",
      "size": 25263,
      "checksum": "SHA-256:930ec039137a829e0cf813bb3870e1050c96a7bec45d5c70affda3ab5d480089"
    },
    {
      "name": "Adafruit LSM303",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's LSM303DLHC 9-DOF breakout",
      "paragraph": "Driver for Adafruit's LSM303DLHC 9-DOF breakout",
      "website": "https://github.com/adafruit/Adafruit_LSM303",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_LSM303/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_LSM303-1.0.0-github.zip",
      "size": 4819,
      "checksum": "SHA-256:33878addb8f99a1bee142385aca986d437ac65a9ecfdf8511e793eadc98b64b9"
    },
    {
      "name": "Adafruit PCD8544 Nokia 5110 LCD library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino driver for PC8544, most commonly found in small Nokia 5110's",
      "paragraph": "Arduino driver for PC8544, most commonly found in small Nokia 5110's",
      "website": "https://github.com/adafruit/Adafruit-PCD8544-Nokia-5110-LCD-library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-PCD8544-Nokia-5110-LCD-library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_PCD8544_Nokia_5110_LCD_library-1.0.0-github.zip",
      "size": 10311,
      "checksum": "SHA-256:d91d52e1aed23abcaa9b58855d1e0cabeb5e363239ead616ed95a559a2635178"
    },
    {
      "name": "Adafruit WS2801 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling strips/pixels using WS2801 driver chips",
      "paragraph": "Arduino library for controlling strips/pixels using WS2801 driver chips",
      "website": "https://github.com/adafruit/Adafruit-WS2801-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-WS2801-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_WS2801_Library-1.0.0-github.zip",
      "size": 9932,
      "checksum": "SHA-256:8e19c58cbc2e1dafba5221295f2ad2694e77e0f06395b90085899359e66a7aec"
    },
    {
      "name": "LiquidCrystal",
      "version": "1.0.0",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs). For all Arduino boards.",
      "paragraph": "This library allows an Arduino board to control LiquidCrystal displays (LCDs) based on the Hitachi HD44780 (or a compatible) chipset, which is found on most text-based LCDs. The library works with in either 4 or 8 bit mode (i.e. using 4 or 8 data lines in addition to the rs, enable, and, optionally, the rw control lines).",
      "website": "http://arduino.cc/en/Reference/LiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/LiquidCrystal/archive/1.0.0.zip",
      "archiveFileName": "LiquidCrystal-1.0.0-github.zip",
      "size": 18082,
      "checksum": "SHA-256:136df6bab7934fda2c33fd31f2f574cfa5db812848e714171dcc7cfbd5b62e13"
    },
    {
      "name": "LiquidCrystal",
      "version": "1.0.1",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs). For all Arduino boards.",
      "paragraph": "This library allows an Arduino board to control LiquidCrystal displays (LCDs) based on the Hitachi HD44780 (or a compatible) chipset, which is found on most text-based LCDs. The library works with in either 4 or 8 bit mode (i.e. using 4 or 8 data lines in addition to the rs, enable, and, optionally, the rw control lines).",
      "website": "http://arduino.cc/en/Reference/LiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/LiquidCrystal/archive/1.0.1.zip",
      "archiveFileName": "LiquidCrystal-1.0.1-github.zip",
      "size": 18077,
      "checksum": "SHA-256:cebd0e36de3b9b311601660fb3b8b5cd9f26e94341a48e71e801b47b85c51c24"
    },
    {
      "name": "TimeAlarms",
      "version": "1.4.0",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Perform tasks at specific times or after specific intervals.",
      "paragraph": "The Alarm library is a companion to the Time library that makes it easy to perform tasks at specific times or after specific intervals.  Tasks scheduled at a particular time of day are called Alarms, tasks scheduled after an interval of time has elapsed are called Timers.  These tasks can be created to continuously repeat or to occur once only.",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/TimeAlarms/archive/1.4.1.zip",
      "archiveFileName": "TimeAlarms-1.4.0-github.zip",
      "size": 11613,
      "checksum": "SHA-256:f36a720e681cd998e730278ee71f9edcb3cf0971a22e7e901a9f19c882fb8122"
    },
    {
      "name": "Adafruit DHT Unified",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor library version of the DHT humidity and temperature sensor Arduino library.",
      "paragraph": "Unified sensor library version of the DHT humidity and temperature sensor Arduino library.",
      "website": "https://github.com/adafruit/Adafruit_DHT_Unified",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_DHT_Unified/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_DHT_Unified-1.0.0-github.zip",
      "size": 7286,
      "checksum": "SHA-256:c9965eba1cd6b9feb014fd235e94f410027cc81051f2ffe383d7b363537438ec"
    },
    {
      "name": "Adafruit BMP183 Unified Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the BMP183 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the BMP183 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_BMP183_Unified_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_BMP183_Unified_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_BMP183_Unified_Library-1.0.0-github.zip",
      "size": 9196,
      "checksum": "SHA-256:955642b34c019d984f7c7da3c3d84b84797c98337312a238d0ddfc6654231c9b"
    },
    {
      "name": "Adafruit MiniMLX90614",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A simplified MLX90614 library for use with the Trinket/Gemma",
      "paragraph": "A simplified MLX90614 library for use with the Trinket/Gemma",
      "website": "https://github.com/adafruit/Adafruit_MiniMLX90614",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_MiniMLX90614/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_MiniMLX90614-1.0.0-github.zip",
      "size": 5168,
      "checksum": "SHA-256:ab778e5edcc158925b5b9ce39262abba8f4a2b924f88dd91468f3237147a9a9a"
    },
    {
      "name": "Adafruit VS1053 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit VS1053 Codec Breakout and Music Maker Shields",
      "paragraph": "This is a library for the Adafruit VS1053 Codec Breakout and Music Maker Shields",
      "website": "https://github.com/adafruit/Adafruit_VS1053_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_VS1053_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_VS1053_Library-1.0.0-github.zip",
      "size": 33281,
      "checksum": "SHA-256:a898f321d8d468e7ff117cae0c22442a0dc7dcd6740a944bd1fdc797b5c8df3a"
    },
    {
      "name": "Adafruit BMP085 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A powerful but easy to use BMP085/BMP180 Library",
      "paragraph": "A powerful but easy to use BMP085/BMP180 Library",
      "website": "https://github.com/adafruit/Adafruit-BMP085-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-BMP085-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_BMP085_Library-1.0.0-github.zip",
      "size": 6391,
      "checksum": "SHA-256:acbb71f6acb99d75c5f3345343feb1b612989c87ff918bc26e011344700c7515"
    },
    {
      "name": "Adafruit RA8875",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "paragraph": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "website": "https://github.com/adafruit/Adafruit_RA8875",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_RA8875/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_RA8875-1.0.0-github.zip",
      "size": 78046,
      "checksum": "SHA-256:80167087e2cbb783893b33643d5df7b82ec26ee16226a8a7fb4169ce59c2ca18"
    },
    {
      "name": "HT1632",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library code for HT1632(C) matrix panel driver chips, and the panels we have in the Adafruit shop",
      "paragraph": "Arduino library code for HT1632(C) matrix panel driver chips, and the panels we have in the Adafruit shop",
      "website": "https://github.com/adafruit/HT1632",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/HT1632/archive/1.0.0.zip",
      "archiveFileName": "HT1632-1.0.0-github.zip",
      "size": 8686,
      "checksum": "SHA-256:d5990004ad49b920d5986a361ea8b8f60e21fa70b0d178110d04ba025b86d766"
    },
    {
      "name": "RTClib",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A fork of Jeelab's fantastic RTC library",
      "paragraph": "A fork of Jeelab's fantastic RTC library",
      "website": "https://github.com/adafruit/RTClib",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/RTClib/archive/1.0.0.zip",
      "archiveFileName": "RTClib-1.0.0-github.zip",
      "size": 10406,
      "checksum": "SHA-256:19038a1c69763305ae5de8d405f291956a81ec90b3c9b77ec864756152c0034b"
    },
    {
      "name": "USBHost",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives. For Arduino DUE only.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/USBHost/archive/1.0.0.zip",
      "archiveFileName": "USBHost-1.0.0-github.zip",
      "size": 55626,
      "checksum": "SHA-256:9a53a24e0f9bf16120d036ec802051e6e0f71f6ddbc80d4d11999e05643bf9d9"
    },
    {
      "name": "USBHost",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives. For Arduino DUE only.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/USBHost/archive/1.0.1.zip",
      "archiveFileName": "USBHost-1.0.1-github.zip",
      "size": 55656,
      "checksum": "SHA-256:0133a52b38c28cf14c1176bb7302b169774040d7a3bd98e5229fd47b7f01a8ee"
    },
    {
      "name": "USBHost",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives. For Arduino DUE only.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/USBHost/archive/1.0.2.zip",
      "archiveFileName": "USBHost-1.0.2-github.zip",
      "size": 55679,
      "checksum": "SHA-256:d27af01f034ce19fc29069408d17ec024a6ebf8ca567b92aa705b3b52aa344a5"
    },
    {
      "name": "FrequencyTimer2",
      "version": "2.1.0",
      "author": "Jim Studt",
      "maintainer": "Paul Stoffregen",
      "sentence": "Generate a frequency using Timer2",
      "website": "http://playground.arduino.cc/Code/FrequencyTimer2",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/FrequencyTimer2/archive/2.1.zip",
      "archiveFileName": "FrequencyTimer2-2.1.0-github.zip",
      "size": 5984,
      "checksum": "SHA-256:7743b2e994b19f485d113943301b41c7665aacca29a0527b9fef9a293e38737b"
    },
    {
      "name": "ILI9341_t3",
      "version": "1.0.0",
      "author": "Limor Fried, Adafruit, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Optimized ILI9341 (320x240 Color TFT) Display",
      "website": "https://github.com/PaulStoffregen/ILI9341_t3",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/ILI9341_t3/archive/1.0.zip",
      "archiveFileName": "ILI9341_t3-1.0.0-github.zip",
      "size": 26714,
      "checksum": "SHA-256:3789053c14ce6c97b1a58f827dd0a8e149d13f9f68d346588375822937949bf6"
    },
    {
      "name": "OctoWS2811",
      "version": "1.2.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Control thousands of WS2812B / NeoPixel LEDs at video refresh speeds",
      "paragraph": "OctoWS2811 is a high performance WS2811 \u0026 WS2812 \u0026 WS2812B LED library featuring simultaneous update to 8 LED strips using efficient DMA-based data transfer.  Minimal CPU impact and double buffering allows complex animation. A VideoDisplay example is included, capable of scaling to extremely large LED installations.",
      "website": "http://www.pjrc.com/teensy/td_libs_OctoWS2811.html",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/OctoWS2811/archive/1.2.1.zip",
      "archiveFileName": "OctoWS2811-1.2.0-github.zip",
      "size": 175097,
      "checksum": "SHA-256:1dff62f9f5e88ef1348b8c5f8d56d3a3e1f742cfabe4f071fdb1e4e2c35907c4"
    },
    {
      "name": "Adafruit DotStar",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit DotStar LED Library",
      "paragraph": "Adafruit DotStar LED Library",
      "website": "https://github.com/adafruit/Adafruit_DotStar",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_DotStar/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_DotStar-1.0.0-github.zip",
      "size": 21482,
      "checksum": "SHA-256:e96970677de3d0dec65fdaaebd17463581ce2d317c9d414dd7084ffdb06d94bd"
    },
    {
      "name": "Tlc5940",
      "version": "0.15.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use the Texas Instruments TLC5940 16-channel LED Driver",
      "paragraph": "The TLC5940 is a 16 channel PWM unit with 12 bit duty cycle control (0 - 4095), 6 bit current limit control (0 - 63), and a daisy chainable serial interface. It is handy for expanding the number of PWM outputs available.",
      "website": "http://playground.arduino.cc/Learning/TLC5940",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/Tlc5940/archive/0.15.zip",
      "archiveFileName": "Tlc5940-0.15.0-github.zip",
      "size": 71579,
      "checksum": "SHA-256:2f16a00ca55ca0e74ecc038757c93a624f470c252fb87b7dbc2282b3a23d4c6f"
    },
    {
      "name": "WiFi",
      "version": "1.2.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/WiFi/archive/1.2.0.zip",
      "archiveFileName": "WiFi-1.2.0-github.zip",
      "size": 5277006,
      "checksum": "SHA-256:5ee7228e017937995bd000d9f16ddc14dd838d40da6cd31f1121337c39ff96f9"
    },
    {
      "name": "WiFi",
      "version": "1.2.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/WiFi/archive/1.2.1.zip",
      "archiveFileName": "WiFi-1.2.1-github.zip",
      "size": 5276998,
      "checksum": "SHA-256:614bc3ea7898a9afda23660f1efd15cae0b8e5b328f9da2d6f428b11b3938927"
    },
    {
      "name": "WiFi",
      "version": "1.2.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/WiFi/archive/1.2.2.zip",
      "archiveFileName": "WiFi-1.2.2-github.zip",
      "size": 5277108,
      "checksum": "SHA-256:e095aa6fb82fd870d064d1b81ff9cf52dc5025c94bd241a1d2dce9234e4e2128"
    },
    {
      "name": "WiFi",
      "version": "1.2.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/WiFi/archive/1.2.3.zip",
      "archiveFileName": "WiFi-1.2.3-github.zip",
      "size": 5277138,
      "checksum": "SHA-256:f06efcb3c86803cb09ce337aa96d55aba14f00f674ad7a6e2e822c36fd6aa4f8"
    },
    {
      "name": "PulsePosition",
      "version": "1.0.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Send and receive multiple high resolution PPM encoded signal streams.",
      "paragraph": "Pulse Position Modulation (PPM) is a single-wire signal that encodes many Pulse Width Modulated (PWM) signals.  It's commonly used in radio control of hobby aircraft and drones, where a radio transmits the PPM signal, which is decoded into many PWM signals to control RC servo motors.  PulsePosition can simultaneously receive and send up to 8 PPM streams.",
      "website": "http://www.pjrc.com/teensy/td_libs_PulsePosition.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/PulsePosition/archive/0.9.zip",
      "archiveFileName": "PulsePosition-1.0.0-github.zip",
      "size": 9496,
      "checksum": "SHA-256:8a85a4171ce4abbcf1a1b35fff397e03fe993e82d738d857f20a5fb9bd8ab386"
    },
    {
      "name": "Adafruit CAP1188 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit CAP1188 8-Channel Capacitive Touch Sensor Breakout",
      "paragraph": "Arduino library for the Adafruit CAP1188 8-Channel Capacitive Touch Sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_CAP1188_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_CAP1188_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_CAP1188_Library-1.0.0-github.zip",
      "size": 5809,
      "checksum": "SHA-256:c5d8bb4845029293f39b384167fbb066e14c77fb186cc3dae6f2d2dde4215eb9"
    },
    {
      "name": "Adafruit Fingerprint Due",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Special version of Fingerprint Library for Arduino Due",
      "paragraph": "Special version of Fingerprint Library for Arduino Due",
      "website": "https://github.com/adafruit/Adafruit_Fingerprint_Due",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_Fingerprint_Due/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_Fingerprint_Due-1.0.0-github.zip",
      "size": 2391593,
      "checksum": "SHA-256:9d514f863c575258735e9c914929b64c072a6fc8a7f3faa52e76f04433e87212"
    },
    {
      "name": "CC3000 MDNS",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Simple multicast DNS name resolution library for Adafruit's CC3000 and Arduino.",
      "paragraph": "Simple multicast DNS name resolution library for Adafruit's CC3000 and Arduino.",
      "website": "https://github.com/adafruit/CC3000_MDNS",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/CC3000_MDNS/archive/1.0.0.zip",
      "archiveFileName": "CC3000_MDNS-1.0.0-github.zip",
      "size": 9300,
      "checksum": "SHA-256:1c79f3545fa9299046bbf487e0d142ab87745ebb97d285c3efb4bb28a620771d"
    },
    {
      "name": "Robot Motor",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the motors of the Arduino Robot Motor board. For Arduino Robot only.",
      "website": "http://arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Robot_Motor/archive/1.0.0.zip",
      "archiveFileName": "Robot_Motor-1.0.0-github.zip",
      "size": 11996,
      "checksum": "SHA-256:90a3017a68ace45498ec2d30618c06b3ce08a2d9f1a2aad4adf7917d2f8b5ef8"
    },
    {
      "name": "SpacebrewYun",
      "version": "1.0.0",
      "author": "Julio Terra",
      "maintainer": "Julio Terra \u003cjulioterra@gmail.com\u003e",
      "sentence": "Enables the communication between interactive objects using WebSockets. For Arduino Yún only.",
      "paragraph": "This library was developed to enable you to easily connect the Arduino Yún to Spacebrew. To learn more about Spacebrew visit Spacebrew.cc",
      "website": "https://github.com/julioterra/yunSpacebrew",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/SpacebrewYun/archive/1.0.0.zip",
      "archiveFileName": "SpacebrewYun-1.0.0-github.zip",
      "size": 6047,
      "checksum": "SHA-256:b6b2b5fae910e0d613e016da39edd77a5087e8e11933710698a9fc7ee5bd7144"
    },
    {
      "name": "Adafruit BLEFirmata",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Modified Firmata code to work with Adafruit's nRF8001 Breakout",
      "paragraph": "Modified Firmata code to work with Adafruit's nRF8001 Breakout",
      "website": "https://github.com/adafruit/Adafruit_BLEFirmata",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_BLEFirmata/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_BLEFirmata-1.0.0-github.zip",
      "size": 43385,
      "checksum": "SHA-256:228b051819824a43e6930059b5ca67ad4f40a666df0f3d9028f824586975338e"
    },
    {
      "name": "Adafruit TLC59711",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for our Adafruit 12-channel PWM/LED driver.",
      "paragraph": "Library for our Adafruit 12-channel PWM/LED driver.",
      "website": "https://github.com/adafruit/Adafruit_TLC59711",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_TLC59711/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_TLC59711-1.0.0-github.zip",
      "size": 4811,
      "checksum": "SHA-256:a25224646a64594a90e611f6ca8a2289da6e87ef52cff983db03b65cf3afdc4e"
    },
    {
      "name": "MAX31850 DallasTemp",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A version of the DallasTemp Arduino library with MAX31850 support (Requires OneWire with MAX31850 support!)",
      "paragraph": "A version of the DallasTemp Arduino library with MAX31850 support (Requires OneWire with MAX31850 support!)",
      "website": "https://github.com/adafruit/MAX31850_DallasTemp",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/MAX31850_DallasTemp/archive/1.0.0.zip",
      "archiveFileName": "MAX31850_DallasTemp-1.0.0-github.zip",
      "size": 18837,
      "checksum": "SHA-256:cae4c168d903aa804c6dc789a2991844e55045b5371a801842cbc1f3d1b148ae"
    },
    {
      "name": "Ethernet",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Ethernet/archive/1.0.0.zip",
      "archiveFileName": "Ethernet-1.0.0-github.zip",
      "size": 49837,
      "checksum": "SHA-256:d20a3c441819f837e531d357108a52fb2aabc1118911d713c3da1fb43cbee7df"
    },
    {
      "name": "Ethernet",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Ethernet/archive/1.0.1.zip",
      "archiveFileName": "Ethernet-1.0.1-github.zip",
      "size": 49961,
      "checksum": "SHA-256:2524d69e849e0670d9a909893eb3485e1001b397ab22b736b952d1725848588b"
    },
    {
      "name": "Ethernet",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Ethernet/archive/1.0.2.zip",
      "archiveFileName": "Ethernet-1.0.2-github.zip",
      "size": 49838,
      "checksum": "SHA-256:e5882d278c4093da18e6789739f4bfaae50332acd6dec75c69349dd7e820a6b9"
    },
    {
      "name": "SD",
      "version": "1.0.0",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/SD/archive/1.0.0.zip",
      "archiveFileName": "SD-1.0.0-github.zip",
      "size": 60591,
      "checksum": "SHA-256:b7be677a06eb08b1036b004d19611613a60ee48183a5a31508f6cbeed0ec153a"
    },
    {
      "name": "SD",
      "version": "1.0.1",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/SD/archive/1.0.1.zip",
      "archiveFileName": "SD-1.0.1-github.zip",
      "size": 60591,
      "checksum": "SHA-256:986629e7dad48194f2c23c016086e625fa7aad76fe7831c77a94b021b3d33f82"
    },
    {
      "name": "SD",
      "version": "1.0.3",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/SD/archive/1.0.3.zip",
      "archiveFileName": "SD-1.0.3-github.zip",
      "size": 59552,
      "checksum": "SHA-256:b8865ab47d1124fc4e387fe324aecee532453b2b1e6e0fa16751afaae5f56f9f"
    },
    {
      "name": "SD",
      "version": "1.0.4",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/SD/archive/1.0.4.zip",
      "archiveFileName": "SD-1.0.4-github.zip",
      "size": 59554,
      "checksum": "SHA-256:c05a9a75e9e0e14d919c39560e2911cece6b99e5d2ac63513a530f53f2e2fd2e"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_NeoPixel/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.0.0-github.zip",
      "size": 30710,
      "checksum": "SHA-256:1532db7bf19d1ecacfedce356c45f074f2123aad64b8ac1a866d5a0af87693dc"
    },
    {
      "name": "Adafruit MMA8451 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MMA8451 Accelerometer sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MMA8451 Accelerometer sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_MMA8451_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_MMA8451_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_MMA8451_Library-1.0.0-github.zip",
      "size": 7778,
      "checksum": "SHA-256:6bf6e57300bee5173ed4ecdaba8fe488f84dbdd4696de1e127ab8e00f82023c0"
    },
    {
      "name": "Adafruit VC0706 Serial Camera Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for VC0706-based Serial JPEG Cameras",
      "paragraph": "Library for VC0706-based Serial JPEG Cameras",
      "website": "https://github.com/adafruit/Adafruit-VC0706-Serial-Camera-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-VC0706-Serial-Camera-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_VC0706_Serial_Camera_Library-1.0.0-github.zip",
      "size": 15358,
      "checksum": "SHA-256:7e9fd3af2b65e2435adc1ed4e111eb3ba39c8d152443d5c1490e0f687ba7fa94"
    },
    {
      "name": "Adafruit MCP23008 library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for the MCP23008 (and '9) I2C I/O expander",
      "paragraph": "Arduino Library for the MCP23008 (and '9) I2C I/O expander",
      "website": "https://github.com/adafruit/Adafruit-MCP23008-library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-MCP23008-library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_MCP23008_library-1.0.0-github.zip",
      "size": 5475,
      "checksum": "SHA-256:66694f12988c4685152dc8ae72413b14bbad732e85e2d783ee22d56fb3f0df51"
    },
    {
      "name": "Adafruit FT6206 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for FT6206-based Capacitive touch screen",
      "paragraph": "Arduino library for FT6206-based Capacitive touch screen",
      "website": "https://github.com/adafruit/Adafruit_FT6206_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_FT6206_Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_FT6206_Library-1.0.0-github.zip",
      "size": 6276,
      "checksum": "SHA-256:72ddcbae33b0943055c5ff41e5b5b0a716d61e2ab7ac0698cceab3a2652c4e83"
    },
    {
      "name": "Adafruit Graphic VFD Display Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's 128x64 Graphic VFD Display Library",
      "paragraph": "Adafruit's 128x64 Graphic VFD Display Library",
      "website": "https://github.com/adafruit/Adafruit-Graphic-VFD-Display-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit-Graphic-VFD-Display-Library/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_Graphic_VFD_Display_Library-1.0.0-github.zip",
      "size": 8604,
      "checksum": "SHA-256:895f5c17a2b7845559d3b87d34775f98b78408360a8044c661e228ac5cd92097"
    },
    {
      "name": "Adafruit TiCoServo",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Use NeoPixels and servos in the same Arduino sketch (with caveats)",
      "paragraph": "Use NeoPixels and servos in the same Arduino sketch (with caveats)",
      "website": "https://github.com/adafruit/Adafruit_TiCoServo",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_TiCoServo/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_TiCoServo-1.0.0-github.zip",
      "size": 10918,
      "checksum": "SHA-256:c4105139f329e8f29ea9e5893e8159777a2063d5b68ed8b665812deac3860dbb"
    },
    {
      "name": "Scheduler",
      "version": "0.4.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows multiple tasks to run at the same time, without interrupting each other. For Arduino DUE only.",
      "paragraph": "The Scheduler library enables the Arduino Due to run multiple functions at the same time. This allows tasks to happen without interrupting each other.\u003c/br\u003eThis is a cooperative scheduler in that the CPU switches from one task to another. The library includes methods for passing control between tasks.",
      "website": "http://arduino.cc/en/Reference/Scheduler",
      "category": "Other",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Scheduler/archive/0.4.0.zip",
      "archiveFileName": "Scheduler-0.4.0-github.zip",
      "size": 5350,
      "checksum": "SHA-256:c761a5d773963a6ffa38e3201f66854aa6f1051632752812bbaedb5bb2ef6f88"
    },
    {
      "name": "Scheduler",
      "version": "0.4.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows multiple tasks to run at the same time, without interrupting each other. For Arduino DUE only.",
      "paragraph": "The Scheduler library enables the Arduino Due to run multiple functions at the same time. This allows tasks to happen without interrupting each other.\u003c/br\u003eThis is a cooperative scheduler in that the CPU switches from one task to another. The library includes methods for passing control between tasks.",
      "website": "http://arduino.cc/en/Reference/Scheduler",
      "category": "Other",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Scheduler/archive/0.4.1.zip",
      "archiveFileName": "Scheduler-0.4.1-github.zip",
      "size": 5288,
      "checksum": "SHA-256:f4322f5d9ea3d2a252255c52ec7f768e215cba8329c2573900b6bfaf8c118220"
    },
    {
      "name": "Stepper",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors. For all Arduino boards.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Stepper/archive/1.0.0.zip",
      "archiveFileName": "Stepper-1.0.0-github.zip",
      "size": 8818,
      "checksum": "SHA-256:972b89a0d58934c8e5dde5f56d85f843dc905bcddd3310fe4a36c1e5e8ae1734"
    },
    {
      "name": "Stepper",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors. For all Arduino boards.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Stepper/archive/1.0.1.zip",
      "archiveFileName": "Stepper-1.0.1-github.zip",
      "size": 9574,
      "checksum": "SHA-256:386e316fdf00228742ded8c654da063900a995eee22eba335db25d4768e180a1"
    },
    {
      "name": "Stepper",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors. For all Arduino boards.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/arduino-libraries/Stepper/archive/1.0.2.zip",
      "archiveFileName": "Stepper-1.0.2-github.zip",
      "size": 9577,
      "checksum": "SHA-256:c4e2b59c5a6787562025326fa3e5857462ff8025513c59ffa9dad12e4a4e39b7"
    },
    {
      "name": "Adafruit ESP8266",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Example code for ESP8266 chipset",
      "paragraph": "Example code for ESP8266 chipset",
      "website": "https://github.com/adafruit/Adafruit_ESP8266",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_ESP8266/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_ESP8266-1.0.0-github.zip",
      "size": 10984,
      "checksum": "SHA-256:272b2bfbec1d9eba0a55979af1572a5dcc6ac8ed86ac74712b349ea3f4163889"
    },
    {
      "name": "USB Host Shield Library 2.0",
      "version": "1.0.0",
      "author": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e, Alexei Glushchenko (Circuits@Home) \u003calex-gl@mail.ru\u003e",
      "maintainer": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e",
      "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library.",
      "paragraph": "Supports HID devices, FTDI, ADK, ACM, PL2303, Bluetooth HID devices, SPP communication and mass storage devices. Furthermore it supports PS3, PS4, PS Buzz, Wii and Xbox controllers.",
      "website": "https://github.com/felis/USB_Host_Shield_2.0",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/felis/USB_Host_Shield_2.0/archive/1.0.0.zip",
      "archiveFileName": "USB_Host_Shield_Library_2_0-1.0.0-github.zip",
      "size": 362085,
      "checksum": "SHA-256:9ee6e9b84ec1aa53d1ce95fa21b3a498f578e670909f6d79b8f824fd485438bd"
    },
    {
      "name": "souliss",
      "version": "7.0.2",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over Ethernet, Wireless and RS485",
      "website": "http://souliss.github.io",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/souliss/souliss/archive/v7.0-friariello.2.zip",
      "archiveFileName": "souliss-7.0.2-github.zip",
      "size": 604295,
      "checksum": "SHA-256:a4160925171471ec1ab000a2db7c759987b8f66380b3436c74e3dd6d644a24b3"
    },
    {
      "name": "Gaussian",
      "version": "1.0.4",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Gaussian math and Moving Average made easy",
      "paragraph": "Library that makes Gaussian work easy to use with C++ and Arduino. REQUIRES \u003cLinkedList\u003e Class if using GaussianAverage.",
      "website": "https://github.com/ivanseidel/Gaussian",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/ivanseidel/Gaussian/archive/1.0.4.zip",
      "archiveFileName": "Gaussian-1.0.4-github.zip",
      "size": 10345,
      "checksum": "SHA-256:b510ff7e9945b90670a38323d978c88b0bb34a67c48752c94d347aacce9b90cf"
    },
    {
      "name": "Gaussian",
      "version": "1.0.5",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Gaussian math, Kalman Filters and Moving Averages made easy",
      "paragraph": "Simple to use and Object Oriented Class to deal with Gaussian and Moving Averages math. REQUIRES LinkedList Class if using GaussianAverage.",
      "website": "https://github.com/ivanseidel/Gaussian",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/ivanseidel/Gaussian/archive/1.0.5.zip",
      "archiveFileName": "Gaussian-1.0.5-github.zip",
      "size": 10357,
      "checksum": "SHA-256:e0793f5a3d6616ffd06aed8d749063867ac52fc8b1283a45f6b6b58561694fac"
    },
    {
      "name": "ArduinoSensors",
      "version": "2.0.0",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A Library of Libraries of Sensors",
      "paragraph": "REQUIRES \u003cArduinoThread\u003e  Library. This library was made to provide lot's of out-of-the-box features, such as 'Interfaces', 'Threadable' sensors, and reliability over C++ Objects.",
      "website": "https://github.com/ivanseidel/ArduinoSensors",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/ivanseidel/ArduinoSensors/archive/0.2.zip",
      "archiveFileName": "ArduinoSensors-2.0.0-github.zip",
      "size": 82502,
      "checksum": "SHA-256:4676126e59bfb012675fd25ac56956be5b4b4335590f751f3ccf2c20a8826b63"
    },
    {
      "name": "ArduinoSensors",
      "version": "1.1.0",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A Library of Libraries of Sensors",
      "paragraph": "REQUIRES \u003cArduinoThread\u003e  Library. This library was made to provide lot`s of out-of-the-box features, such as 'Interfaces', 'Threadable' sensors, and reliability over C++ Objects.",
      "website": "https://github.com/ivanseidel/ArduinoSensors",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/ivanseidel/ArduinoSensors/archive/1.1.zip",
      "archiveFileName": "ArduinoSensors-1.1.0-github.zip",
      "size": 82498,
      "checksum": "SHA-256:b56f132186388ab9cd09a108a53516a237bcbaf114bc63d3c885b6ccbe53c6ad"
    },
    {
      "name": "LinkedList",
      "version": "1.2.2",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A fully implemented LinkedList made to work with Arduino projects",
      "paragraph": "The objective of this library is to create a pattern for projects. If you need to use a List of: int, float, objects, Lists or Wales. This is what you are looking for.",
      "website": "https://github.com/ivanseidel/LinkedList",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/ivanseidel/LinkedList/archive/1.2.2.zip",
      "archiveFileName": "LinkedList-1.2.2-github.zip",
      "size": 9436,
      "checksum": "SHA-256:ca7df6bf609f58f6394061330242e88a82fa1deb3c6db705ef2267b524f2d563"
    },
    {
      "name": "DueTimer",
      "version": "1.4.5",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Timer Library fully implemented for Arduino DUE",
      "paragraph": "There are 9 Timer objects already instantiated for you: Timer0, Timer1, Timer2, Timer3, Timer4, Timer5, Timer6, Timer7 and Timer8.",
      "website": "https://github.com/ivanseidel/DueTimer",
      "category": "Timing",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/ivanseidel/DueTimer/archive/1.4.5.zip",
      "archiveFileName": "DueTimer-1.4.5-github.zip",
      "size": 11445,
      "checksum": "SHA-256:97bf56695516167d7ecca3c26cf3781b69e793b522c6781c9d16801a10dcf981"
    },
    {
      "name": "ArduinoThread",
      "version": "2.0.0",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A simple way to run Threads on Arduino",
      "paragraph": "This Library helps to maintain organized and to facilitate the use of multiple tasks. We can use Timers Interrupts, and make it really powerfull, running \"pseudo-background\" tasks on the rug.",
      "website": "https://github.com/ivanseidel/ArduinoThread",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/ivanseidel/ArduinoThread/archive/1.0.zip",
      "archiveFileName": "ArduinoThread-2.0.0-github.zip",
      "size": 25851,
      "checksum": "SHA-256:44868fbefea8dffa62f88ec7fc4034d3a466ae6c39ed04402b8f4815de616aa2"
    },
    {
      "name": "ArduinoThread",
      "version": "2.0.2",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A simple way to run Threads on Arduino",
      "paragraph": "This Library helps to maintain organized and to facilitate the use of multiple tasks. We can use Timers Interrupts, and make it really powerfull, running \"pseudo-background\" tasks on the rug.",
      "website": "https://github.com/ivanseidel/ArduinoThread",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/ivanseidel/ArduinoThread/archive/2.0.2.zip",
      "archiveFileName": "ArduinoThread-2.0.2-github.zip",
      "size": 25999,
      "checksum": "SHA-256:f10df9ab8faaa3fe1f81aa4359c476d6d4b6002fa6049a42963abd1fefbee0bd"
    },
    {
      "name": "CapacitiveSensor",
      "version": "0.5.0",
      "author": "Paul Bagder, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Create capacitive sensors that can detect touch or proximity.",
      "paragraph": "The capacitiveSensor library turns two or more Arduino pins into a capacitive sensor, which can sense the electrical capacitance of the human body. All the sensor setup requires is a medium to high value resistor and a piece of wire and a small (to large) piece of aluminum foil on the end. At its most sensitive, the sensor will start to sense a hand or body inches away from the sensor.",
      "website": "http://playground.arduino.cc/Main/CapacitiveSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/PaulStoffregen/CapacitiveSensor/archive/0.5.zip",
      "archiveFileName": "CapacitiveSensor-0.5.0-github.zip",
      "size": 6320,
      "checksum": "SHA-256:bd45a292a8d384d369aa3d46de57ef5aea7bc26c1defb1028eb9a4d07a5a2ba4"
    },
    {
      "name": "aREST",
      "version": "1.9.7",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/marcoschwartz/aREST/archive/v1.9.8.zip",
      "archiveFileName": "aREST-1.9.7-github.zip",
      "size": 22903,
      "checksum": "SHA-256:c32cbad06e31a643f69b64ea72dd6ed0f97fc9eefe2b7777532ab155aa4734ca"
    },
    {
      "name": "StereoSID",
      "version": "2.0.3",
      "author": "Christoph Haberer,Mario Patino,Giovanni Giorgi",
      "maintainer": "Giovani Giorgi",
      "sentence": "MOS6581 Stereo SID Emulator Arduino Library",
      "paragraph": "This library emulates the SID sound chip of the famous Commodore 64 with enhanched stereo support.",
      "website": "http://gioorgi.com/tag/stereosid/",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/daitangio/sid-arduino-lib/archive/StereoSID-2.0.3.zip",
      "archiveFileName": "StereoSID-2.0.3-github.zip",
      "size": 16231,
      "checksum": "SHA-256:66a0c6ae8b6631bfdec2bc83037a87b83c523df2e1b786652db9fe16cbd5575a"
    },
    {
      "name": "MAX78630",
      "version": "1.0.1",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/x2bus/EnergyBoard/archive/1.0.1.zip",
      "archiveFileName": "MAX78630-1.0.1-github.zip",
      "size": 7407,
      "checksum": "SHA-256:6d5be0d45b08695ada106ead56d8ff8196d9ffecd47be4b0ac51fa76559f55d1"
    },
    {
      "name": "MAX78630",
      "version": "1.0.2",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/x2bus/EnergyBoard/archive/1.1.0.zip",
      "archiveFileName": "MAX78630-1.0.2-github.zip",
      "size": 68923,
      "checksum": "SHA-256:b44c50440f27c7d86faf89098477338c4faca05c7dde4659649026f31c09eaba"
    },
    {
      "name": "MAX78630",
      "version": "1.2.0",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/x2bus/EnergyBoard/archive/1.2.0.zip",
      "archiveFileName": "MAX78630-1.2.0-github.zip",
      "size": 69192,
      "checksum": "SHA-256:ba87583d98586cead0759bb16ff7cd875c94c59b0a763e1121d245390b54d5b7"
    },
    {
      "name": "DMXSerial",
      "version": "1.2.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel \u003cwww.mathertel.de\u003e",
      "sentence": "Enables DMX communication using the built-in serial port for Arduino boards UNO, Leonardo, Mega.",
      "paragraph": "This is a library to implement DMX controllers and devices.",
      "website": "http://www.mathertel.de/Arduino/DMXSerial.aspx",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/mathertel/DMXSerial/archive/1.2.0.zip",
      "archiveFileName": "DMXSerial-1.2.0-github.zip",
      "size": 13981,
      "checksum": "SHA-256:692e089dbf0fac02d82c604c08f196e0a5032ee32d240b7708a8d24648e761b3"
    },
    {
      "name": "DMXSerial2",
      "version": "1.1.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel, http://www.mathertel.de",
      "sentence": "Enables building DMX/RDM devices using the built-in serial port for Arduino boards UNO, Leonardo, Mega.",
      "paragraph": "This is a library to implement a DMX devices that also listen and respond to RDM commands to retrieve information from the DMX devices.",
      "website": "http://www.mathertel.de/Arduino/DMXSerial2.aspx",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/mathertel/DMXSerial2/archive/1.1.0.zip",
      "archiveFileName": "DMXSerial2-1.1.0-github.zip",
      "size": 28664,
      "checksum": "SHA-256:c693e5829677b742c5b32d7df25214aae95c51e4cef869d2acb1153837c5503a"
    },
    {
      "name": "DMXSerial2",
      "version": "1.2.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel, http://www.mathertel.de",
      "sentence": "Enables building DMX/RDM devices using the built-in serial port for Arduino boards UNO, Leonardo, Mega.",
      "paragraph": "This is a library to implement a DMX devices that also listen and respond to RDM commands to retrieve information from the DMX devices.",
      "website": "http://www.mathertel.de/Arduino/DMXSerial2.aspx",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/mathertel/DMXSerial2/archive/1.2.0.zip",
      "archiveFileName": "DMXSerial2-1.2.0-github.zip",
      "size": 28937,
      "checksum": "SHA-256:def747ddfb937ec13ddf4f274dce2036895834696a95eeac5a6293b6b748968c"
    },
    {
      "name": "MINDSi",
      "version": "2.0.0",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/MINDS-i/MINDS-i/archive/v2.0.0.zip",
      "archiveFileName": "MINDSi-2.0.0-github.zip",
      "size": 33807,
      "checksum": "SHA-256:c1264b51e8efcaf88edc8b37c4628033f23cbe5703e6bf61c9de35c289b36707"
    },
    {
      "name": "Pushetta",
      "version": "1.0.0",
      "author": "Fabrizio Guglielmino \u003cguglielmino@gumino.com\u003e",
      "maintainer": "Fabrizio Guglielmino \u003cguglielmino@gumino.com\u003e",
      "sentence": "The library to use Pushetta service, a service to push notifications to mobile phones and other devices",
      "paragraph": "Pushetta is a Web API that provides an unificated way to send realtime notifications to multiple devices. Used with Arduino Yun it's possible to send alert, informations or any data in realtime to groups of subscribers (more on pushetta web site)",
      "website": "https://github.com/guglielmino/arduino-pushetta-lib",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/guglielmino/arduino-pushetta-lib/archive/1.0.zip",
      "archiveFileName": "Pushetta-1.0.0-github.zip",
      "size": 5315,
      "checksum": "SHA-256:5a47dc1cdc794b7380c0e8fd1e61d06a6f53d4e176c9cf63e4d5a48c75ba6b7c"
    },
    {
      "name": "FTRGBLED",
      "version": "1.0.0",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Freetronics RGBLED module (WS2801-based) driver library.",
      "paragraph": "Display RGB colours on a chain of WS2801-based Freetronics RGBLEDs (or compatible).",
      "website": "https://github.com/freetronics/FTRGBLED/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/freetronics/FTRGBLED/archive/v1.0.0.zip",
      "archiveFileName": "FTRGBLED-1.0.0-github.zip",
      "size": 10231,
      "checksum": "SHA-256:5af06eeaca35f2c0ae3d57fa16cf34846d1321a11b5a209a41682a26bb130386"
    },
    {
      "name": "FTOLED",
      "version": "1.0.0",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Library to drive Freetronics OLED128 128x128 display.",
      "paragraph": "Supports graphics operations (test, images, etc.) on the OLED128. Can probably be used with other SSD1351 based displays. Manual at https://github.com/freetronics/FTOLED/wiki",
      "website": "https://github.com/freetronics/FTOLED/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/freetronics/FTOLED/archive/v1.0.0.zip",
      "archiveFileName": "FTOLED-1.0.0-github.zip",
      "size": 315418,
      "checksum": "SHA-256:10b6a6321bcd8d408eb60605c96c986703d5e4c15dea0240bcfe74b800e99d3b"
    },
    {
      "name": "FTOLED",
      "version": "1.1.0",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Library to drive Freetronics OLED128 128x128 display.",
      "paragraph": "Supports graphics operations (test, images, etc.) on the OLED128. Can probably be used with other SSD1351 based displays. Manual at https://github.com/freetronics/FTOLED/wiki",
      "website": "https://github.com/freetronics/FTOLED/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/freetronics/FTOLED/archive/v1.1.0.zip",
      "archiveFileName": "FTOLED-1.1.0-github.zip",
      "size": 315617,
      "checksum": "SHA-256:274ab2217e9e60f3a29a972fb8454ac62762da475de0707f0b8e8ce01eaa4b53"
    },
    {
      "name": "BaroLibrary",
      "version": "1.0.0",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Library for Measurement Specialties MS5637-02BA03 Altimeter/Pressure sensor (including Freetronics BARO module).",
      "website": "https://github.com/freetronics/BaroSensor",
      "category": "Sensors",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/freetronics/BaroSensor/archive/v1.0.0.zip",
      "archiveFileName": "BaroLibrary-1.0.0-github.zip",
      "size": 19772,
      "checksum": "SHA-256:bc276af96cb51995ce59d4d3b212f92a70ef230b020eb355ec58656439192216"
    },
    {
      "name": "DMD2",
      "version": "0.0.1",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Updated (beta) library for Freetronics DMD dot matrix displays.",
      "paragraph": "Supports graphics operations (test, images, etc.) Still experimental, the stable library is called called \"DMD\"",
      "website": "https://github.com/freetronics/DMD2/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/freetronics/DMD2/archive/v0.0.1.zip",
      "archiveFileName": "DMD2-0.0.1-github.zip",
      "size": 51991,
      "checksum": "SHA-256:b11990bf3899fd284a699bb925afebd81206898761f567cd448bac7e13caeded"
    },
    {
      "name": "Temboo",
      "version": "1.1.0",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/temboo/Temboo/archive/1.1.0.zip",
      "archiveFileName": "Temboo-1.1.0-github.zip",
      "size": 36471,
      "checksum": "SHA-256:1aed9fc7a153ada913d09a43bc809a87a3c975f736f32ab878390e772d787894"
    },
    {
      "name": "Temboo",
      "version": "1.1.1",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/temboo/Temboo/archive/1.1.1.zip",
      "archiveFileName": "Temboo-1.1.1-github.zip",
      "size": 36471,
      "checksum": "SHA-256:746bb374b56da644eb9a0288b25fdffea80c471634505d8c4871c707d6decf13"
    },
    {
      "name": "Temboo",
      "version": "1.1.2",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "https://github.com/temboo/Temboo/archive/1.1.2.zip",
      "archiveFileName": "Temboo-1.1.2-github.zip",
      "size": 36653,
      "checksum": "SHA-256:b4a0435c1f1d84deaf68aa5c3c9dd4ec19a1d5d564ceb4c51cd17fa92bd828f4"
    },
    {
      "name": "SoftwareWire",
      "version": "1.3.2",
      "author": "Testato, Koepel",
      "maintainer": "Testato \u003cspeednpower@gmail.com\u003e",
      "sentence": "Creates a software I2C/TWI bus on every pins.",
      "paragraph": "The SoftwareWire is only I2C Master mode. More than one software I2C bus can be created. The clock pulse stretching is implemented, so the Slave can be another Arduino board",
      "website": "https://github.com/Testato/SoftwareWire",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/Testato/SoftwareWire/archive/1.3.2.zip",
      "archiveFileName": "SoftwareWire-1.3.2-github.zip",
      "size": 14553,
      "checksum": "SHA-256:9d7b5ef965b36c09b644e6e9787038229dc88ec6ccf44288984b4521b3a804f9"
    },
    {
      "name": "EEPROMEx",
      "version": "1.0.0",
      "author": "Thijs Elenbaas",
      "maintainer": "Thijs Elenbaas",
      "sentence": "Extension of the standard Arduino EEPROM library.",
      "paragraph": "Extended for reading and writing basic types, structs, strings, arrays and more.",
      "website": "http://playground.arduino.cc/Code/EEPROMex",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/thijse/Arduino-EEPROMEx/archive/1.0.0.zip",
      "archiveFileName": "EEPROMEx-1.0.0-github.zip",
      "size": 88145,
      "checksum": "SHA-256:7a01ae45e9b023969cd58c98d20f43b17fa6480cb0eaee659f0fc19ea27970ce"
    },
    {
      "name": "CmdMessenger",
      "version": "4.0.0",
      "author": "Thijs Elenbaas, Valeriy Kucherenko",
      "maintainer": "Thijs Elenbaas",
      "sentence": "A serial messaging library for the Arduino and .NET/Mono platform.",
      "paragraph": "It uses serial port and Bluetooth as transport layer. To use CmdMessenger, we define a list of command identifiers, then attach callback / handler functions for received messages. PLEASE NOTE: samples requires PID and optionally Adafruit_MAX31855 libraries.",
      "website": "http://playground.arduino.cc/Code/CmdMessenger",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/thijse/Arduino-CmdMessenger/archive/4.0.0.zip",
      "archiveFileName": "CmdMessenger-4.0.0-github.zip",
      "size": 1424647,
      "checksum": "SHA-256:f3963ed47e6b9e99105aa621a65845513a265bfb3b82b43df5f024c5ddd3741a"
    },
    {
      "name": "DCF77",
      "version": "1.0.0",
      "author": "Thijs Elenbaas",
      "maintainer": "Thijs Elenbaas",
      "sentence": "Read and decode the atomic time broadcasted by the DCF77 radiostation.",
      "paragraph": "The DCF77 library has been designed to work in conjunction with Arduino Time library and allows a sketch to get the precise CET time and date as a standard C time_t. PLEASE NOTE: samples require Time and TimeZone libraries.",
      "website": "http://playground.arduino.cc/Code/DCF77",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/thijse/Arduino-DCF77/archive/1.0.0.zip",
      "archiveFileName": "DCF77-1.0.0-github.zip",
      "size": 309277,
      "checksum": "SHA-256:280a75fc74e4e8553e038e625bb8edf6ea9d61feec86119f524e6d9fad98f931"
    },
    {
      "name": "PID",
      "version": "1.1.1",
      "author": "Brett Beauregard",
      "maintainer": "Brett Beauregard",
      "sentence": "PID controller",
      "paragraph": "A PID controller seeks to keep some input variable close to a desired setpoint by adjusting an output. The way in which it does this can be 'tuned' by adjusting three parameters (P,I,D).",
      "website": "http://playground.arduino.cc/Code/PIDLibrary",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/br3ttb/Arduino-PID-Library/archive/v1.1.1.zip",
      "archiveFileName": "PID-1.1.1-github.zip",
      "size": 9108,
      "checksum": "SHA-256:417eb2b650d5a50752f8bf7b4e854f4d2e83bcfad8c0d578eaf2e7b4a9f97955"
    },
    {
      "name": "Kalman Filter Library",
      "version": "1.0.1",
      "author": "Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e",
      "maintainer": "Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e",
      "sentence": "Kalman Filter Library.",
      "paragraph": "Kalman filter used to calculate the angle, rate and bias from from the input of an accelerometer/magnetometer and a gyroscope.",
      "website": "https://github.com/TKJElectronics/KalmanFilter",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/TKJElectronics/KalmanFilter/archive/1.0.1.zip",
      "archiveFileName": "Kalman_Filter_Library-1.0.1-github.zip",
      "size": 19333,
      "checksum": "SHA-256:9b3cc6b39049b9466041d62cda5b0b48049e79129a6377e4de13fe4958f437d3"
    },
    {
      "name": "SparkFun Color LCD Shield",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "This is an Arduino library for SparkFun's Color LCD Shield",
      "paragraph": "This is an Arduino library for SparkFun's Color LCD Shield",
      "website": "https://github.com/sparkfun/SparkFun_Color_LCD_Shield_Arduino_Library",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/SparkFun_Color_LCD_Shield_Arduino_Library/archive/V_1.0.zip",
      "archiveFileName": "SparkFun_Color_LCD_Shield-1.0.0-github.zip",
      "size": 22606,
      "checksum": "SHA-256:c3019b9c92c674f99d764af75e6ad57a913002b0a702b8b3ba793c618b144f6d"
    },
    {
      "name": "SparkFun Color LCD Shield",
      "version": "1.0.1",
      "author": "Jim@SparkFun Electronics",
      "maintainer": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "sentence": "This is an Arduino library for SparkFun's Color LCD Shield",
      "paragraph": "This is an Arduino library for SparkFun's Color LCD Shield",
      "website": "https://github.com/sparkfun/SparkFun_Color_LCD_Shield_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/SparkFun_Color_LCD_Shield_Arduino_Library/archive/V_1.0.1.zip",
      "archiveFileName": "SparkFun_Color_LCD_Shield-1.0.1-github.zip",
      "size": 22908,
      "checksum": "SHA-256:3346dd8a4591a6a7c7a1a73a7577451abb6c04aca2f55cfc3c9c039c174ec9da"
    },
    {
      "name": "SparkFun Graphic LCD Serial Backpack",
      "version": "1.0.0",
      "author": "Mike Hord",
      "maintainer": "SparkFun Electronics",
      "sentence": "Library containing functions for SparkFun Graphic LCD Serial Backpack",
      "paragraph": "Library containing functions for SparkFun Graphic LCD Serial Backpack",
      "website": "https://github.com/sparkfun/GraphicLCD_Serial_Backpack",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/SparkFun_Graphic_LCD_Serial_Backpack_Arduino_Library/archive/V_1.0.0.zip",
      "archiveFileName": "SparkFun_Graphic_LCD_Serial_Backpack-1.0.0-github.zip",
      "size": 65300,
      "checksum": "SHA-256:39adacdce47cdd4dc9a8924a5df687d8b4f4ef8b2ac9e29c2596e48e461fa719"
    },
    {
      "name": "SparkFun Graphic LCD Serial Backpack",
      "version": "1.0.1",
      "author": "Mike Hord",
      "maintainer": "SparkFun Electronics \u003ctechsupport@SparkFun.com\u003e",
      "sentence": "Library containing functions for SparkFun Graphic LCD Serial Backpack",
      "paragraph": "Library containing functions for SparkFun Graphic LCD Serial Backpack",
      "website": "https://github.com/sparkfun/GraphicLCD_Serial_Backpack",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/SparkFun_Graphic_LCD_Serial_Backpack_Arduino_Library/archive/V_1.0.1.zip",
      "archiveFileName": "SparkFun_Graphic_LCD_Serial_Backpack-1.0.1-github.zip",
      "size": 10510,
      "checksum": "SHA-256:2d215cd65b04f3c4070b4499253d25e12109aa84104ca6cc460ab5cb6c3c1f0d"
    },
    {
      "name": "EnergyBoard",
      "version": "2.0.0",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/x2bus/EnergyBoard/archive/2.0.0.zip",
      "archiveFileName": "EnergyBoard-2.0.0-github.zip",
      "size": 612437,
      "checksum": "SHA-256:84ab8f8b7f7eedc399ac38d7349a1eb8220f8c468ca7f703eb36dc232a56cd3c"
    },
    {
      "name": "Micro OLED Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "Breakout board for a monochrome, 0.66\", 64x48 OLED display.",
      "paragraph": "Breakout board for a monochrome, 0.66\", 64x48 OLED display.",
      "website": "https://github.com/sparkfun/Micro_OLED_Breakout",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/SparkFun_Micro_OLED_Arduino_Library/archive/V_1.0.0.zip",
      "archiveFileName": "Micro_OLED_Breakout-1.0.0-github.zip",
      "size": 47416,
      "checksum": "SHA-256:95a9f90721d7033dd39ba0eb7593644e3e428c6fc67c5d6cfebc9556a1e6b8c6"
    },
    {
      "name": "SparkFun Micro OLED Breakout",
      "version": "1.1.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the \u003ca href=\"https://www.sparkfun.com/products/13003\"\u003eSparkFun Micro OLED Breakout\u003c/a\u003e.",
      "paragraph": "Library for the Micro OLED Breakout, a monochrome, 0.66\", 64x48 OLED display. Several basic functionlity examples included.",
      "website": "https://github.com/sparkfun/SparkFun_Micro_OLED_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/SparkFun_Micro_OLED_Arduino_Library/archive/V_1.1.1.zip",
      "archiveFileName": "SparkFun_Micro_OLED_Breakout-1.1.1-github.zip",
      "size": 47151,
      "checksum": "SHA-256:5d24a1164f75c6944419627386bb2a697b9ef93f7606d6cbe91fde4020bd0256"
    },
    {
      "name": "MicroView",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "The MicroView is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics",
      "paragraph": "The MicroView is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics",
      "website": "https://github.com/sparkfun/MicroView",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/SparkFun_MicroView_Arduino_Library/archive/V_1.0.0.zip",
      "archiveFileName": "MicroView-1.0.0-github.zip",
      "size": 1098349,
      "checksum": "SHA-256:e48029b750150839bbe9939f2519db6d9beaa952b40f76dafb841217cf315203"
    },
    {
      "name": "SparkFun MicroView",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "The MicroView is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics",
      "paragraph": "The \u003ca href=\"https://www.sparkfun.com/products/12923\"\u003eMicroView\u003c/a\u003e is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics.",
      "website": "https://github.com/sparkfun/SparkFun_MicroView_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/SparkFun_MicroView_Arduino_Library/archive/V_1.0.1.zip",
      "archiveFileName": "SparkFun_MicroView-1.0.1-github.zip",
      "size": 1098452,
      "checksum": "SHA-256:c515940b5140fd339c592a27675b019c5632a77ea0e198d5f9e4517feaa75fa8"
    },
    {
      "name": "Phant",
      "version": "2.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "A simple interface to post data to a phant stream.",
      "paragraph": "A simple interface to post, get, or clear data from a Phant stream (data.sparkfun.com).",
      "website": "https://github.com/sparkfun/phant-arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/phant-arduino/archive/V_2.0.0.zip",
      "archiveFileName": "Phant-2.0.0-github.zip",
      "size": 6283,
      "checksum": "SHA-256:7bfb21b8e9a2dc6584d938f9a091dca3449be8b46caa771c8cdfd4528c7b9ba6"
    },
    {
      "name": "Kalman filter library",
      "version": "1.0.0",
      "author": "Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e",
      "maintainer": "Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e",
      "sentence": "Kalman filter library.",
      "paragraph": "This is a Kalman filter used to calculate the angle, rate and bias from from the input of an accelerometer/magnetometer and a gyroscope.",
      "website": "https://github.com/TKJElectronics/KalmanFilter",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/TKJElectronics/KalmanFilter/archive/1.0.0.zip",
      "archiveFileName": "Kalman_filter_library-1.0.0-github.zip",
      "size": 19337,
      "checksum": "SHA-256:ed9695d224da4221a98c13e1dabe62575b417b3471dce699873279c3070ddfa2"
    },
    {
      "name": "SparkFun VKey Arduino Library",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad ().",
      "paragraph": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad (https://www.sparkfun.com/products/12080).",
      "website": "https://github.com/sparkfun/SparkFun_VKey_Voltage_Keypad_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "AVR"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/SparkFun_VKey_Voltage_Keypad_Arduino_Library/archive/V_1.0.zip",
      "archiveFileName": "SparkFun_VKey_Arduino_Library-1.0.0-github.zip",
      "size": 9071,
      "checksum": "SHA-256:55936b872f827ec91627839ae4ddfe085ee1c10229a19e8e8b34a2254acc7630"
    },
    {
      "name": "SparkFun VKey Arduino Library",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad.",
      "paragraph": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad (https://www.sparkfun.com/products/12080). Gives the user access to a 12 switch keypad using only a few I/O pins.",
      "website": "https://github.com/sparkfun/SparkFun_VKey_Voltage_Keypad_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/SparkFun_VKey_Voltage_Keypad_Arduino_Library/archive/V_1.0.1.zip",
      "archiveFileName": "SparkFun_VKey_Arduino_Library-1.0.1-github.zip",
      "size": 9680,
      "checksum": "SHA-256:540d8fb645f7480bab6b2946e08af06bf523b7a3d98c9b14836ef56628b43c98"
    },
    {
      "name": "SparkFun MPL3115A2 Altitude \u0026 Pressure Sensor Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "SparkFun's breakout for the Freescale MPL3115A2 Precision Altimeter",
      "paragraph": "Breakout board for MEMS altitude sensor capable of 30cm altitude resolution.",
      "website": "https://github.com/sparkfun/SparkFun_MPL3115A2_Breakout_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/SparkFun_MPL3115A2_Breakout_Arduino_Library/archive/V_1.0.zip",
      "archiveFileName": "SparkFun_MPL3115A2_Altitude___Pressure_Sensor_Breakout-1.0.0-github.zip",
      "size": 25260,
      "checksum": "SHA-256:dc4bf370081c3ad95f7426a593f183518f9d5ed894e8da5442e3d7951c8cc9c7"
    },
    {
      "name": "SparkFun MPL3115A2 Altitude \u0026 Pressure Sensor Breakout",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "SparkFun's breakout for the Freescale MPL3115A2 Precision Altimeter",
      "paragraph": "Breakout board for MEMS altitude sensor capable of 30cm altitude resolution.",
      "website": "https://github.com/sparkfun/SparkFun_MPL3115A2_Breakout_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/SparkFun_MPL3115A2_Breakout_Arduino_Library/archive/V_1.0.1.zip",
      "archiveFileName": "SparkFun_MPL3115A2_Altitude___Pressure_Sensor_Breakout-1.0.1-github.zip",
      "size": 25941,
      "checksum": "SHA-256:22614b08bc19ef6e466956ad1fad16306ce5ac6afc67ac2db94a2af702c83716"
    },
    {
      "name": "SparkFun MPL3115A2 Altitude \u0026 Pressure Sensor Breakout",
      "version": "1.2.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "SparkFun's breakout for the Freescale MPL3115A2 Precision Altimeter",
      "paragraph": "Breakout board for MEMS altitude sensor capable of 30cm altitude resolution.",
      "website": "https://github.com/sparkfun/SparkFun_MPL3115A2_Breakout_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/sparkfun/SparkFun_MPL3115A2_Breakout_Arduino_Library/archive/V_1.2.0.zip",
      "archiveFileName": "SparkFun_MPL3115A2_Altitude___Pressure_Sensor_Breakout-1.2.0-github.zip",
      "size": 31308,
      "checksum": "SHA-256:e10963a2b13d97a090c070e408137dd6d22f08ce59115a93ba94c7c6ce02e779"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.0.0",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_BNO055/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_BNO055-1.0.0-github.zip",
      "size": 1655154,
      "checksum": "SHA-256:d7c70d2de3f2029391ef305eadc43f93144fd3474bbe2439c9d7d218b7b6fd6a"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.0.1",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_BNO055/archive/1.0.2.zip",
      "archiveFileName": "Adafruit_BNO055-1.0.1-github.zip",
      "size": 1655222,
      "checksum": "SHA-256:6600ab4219662a02928bbb6a3abac00f2142b6d28cb630674d542c2f125fb8e9"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.0.3",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_BNO055/archive/1.0.3.zip",
      "archiveFileName": "Adafruit_BNO055-1.0.3-github.zip",
      "size": 1656747,
      "checksum": "SHA-256:2198f54e3044661736158f62d859e6cff18366360455bec482d7e7937bbbb230"
    },
    {
      "name": "Adafruit Unified Sensor",
      "version": "1.0.0",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Required for all Adafruit Unified Sensor based libraries.",
      "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
      "website": "https://github.com/adafruit/Adafruit_Sensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "https://github.com/adafruit/Adafruit_Sensor/archive/1.0.0.zip",
      "archiveFileName": "Adafruit_Unified_Sensor-1.0.0-github.zip",
      "size": 7091,
      "checksum": "SHA-256:d2aed0dedb0f344238b34ba7370acfcdc6b923713bf3a72506a2cf0d3bb1cbf5"
    },
    {
      "name": "OneSheeld",
      "version": "1.5.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "https://github.com/Integreight/1Sheeld-Arduino-Library/archive/v1.5.0.zip",
      "archiveFileName": "OneSheeld-1.5.0-github.zip",
      "size": 168519,
      "checksum": "SHA-256:425736609b50b4c9d2f9723c92ee63ad453539b623caa00c8e5761aad67cff6d"
    }
  ]
}